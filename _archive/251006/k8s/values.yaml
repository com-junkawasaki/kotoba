# Default values for kotoba Helm chart

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []

# Kotoba image settings
image:
  repository: kotoba
  tag: "latest"
  pullPolicy: IfNotPresent

# Service account settings
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod settings
podAnnotations: {}
podSecurityContext: {}

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Cluster configuration
cluster:
  replicas: 3
  minReplicas: 3
  maxReplicas: 10

  # Node configuration
  nodes:
    - id: "node-0"
      address: "{{ include \"kotoba.fullname\" . }}-0.{{ include \"kotoba.fullname\" . }}.{{ .Release.Namespace }}.svc.cluster.local:8080"
      cidRange:
        start: 0
        end: 4294967295
    - id: "node-1"
      address: "{{ include \"kotoba.fullname\" . }}-1.{{ include \"kotoba.fullname\" . }}.{{ .Release.Namespace }}.svc.cluster.local:8080"
      cidRange:
        start: 4294967296
        end: 8589934591
    - id: "node-2"
      address: "{{ include \"kotoba.fullname\" . }}-2.{{ include \"kotoba.fullname\" . }}.{{ .Release.Namespace }}.svc.cluster.local:8080"
      cidRange:
        start: 8589934592
        end: 12884901887

  # Replication and consistency
  replicationFactor: 3
  readConsistency: "quorum"
  writeConsistency: "quorum"

# Storage configuration
storage:
  enabled: true
  size: "100Gi"
  className: "standard"  # For local/kind, use "standard" or "local-path"
  accessMode: "ReadWriteOnce"

# Resource limits and requests
resources:
  requests:
    memory: "2Gi"
    cpu: "1000m"
  limits:
    memory: "4Gi"
    cpu: "2000m"

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Service configuration
service:
  type: ClusterIP  # For local/kind, use ClusterIP instead of LoadBalancer
  port: 80
  targetPort: 3000
  grpcPort: 8080
  grpcTargetPort: 8080

# Ingress configuration
ingress:
  enabled: false  # Disable for local development
  className: ""
  annotations: {}
  hosts:
    - host: kotoba.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Health check configuration
healthCheck:
  enabled: true
  path: "/health"
  port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Readiness check configuration
readinessCheck:
  enabled: true
  path: "/health"
  port: 3000
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Startup probe configuration
startupProbe:
  enabled: true
  path: "/health"
  port: 3000
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Monitoring configuration
monitoring:
  enabled: true
  metricsPath: "/metrics"
  port: 3000

# Environment variables
extraEnvVars: []

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Pod anti-affinity for better distribution
podAntiAffinity:
  preferredDuringSchedulingIgnoredDuringExecution:
  - weight: 100
    podAffinityTerm:
      labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/name
          operator: In
          values:
          - kotoba
      topologyKey: kubernetes.io/hostname
