apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kotoba-cluster
  namespace: kotoba-system
  labels:
    app: kotoba
    component: storage
spec:
  serviceName: kotoba-cluster
  replicas: 3
  selector:
    matchLabels:
      app: kotoba
      component: storage
  template:
    metadata:
      labels:
        app: kotoba
        component: storage
    spec:
      containers:
      - name: kotoba
        image: gcr.io/YOUR_PROJECT_ID/kotoba:latest  # Replace with your GCR project
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 8080
          name: grpc
        env:
        - name: KOTOBA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KOTOBA_CLUSTER_SIZE
          value: "3"
        - name: KOTOBA_NODE_INDEX
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - "./kotoba"
        args:
        - "server"
        - "--config"
        - "/config/kotoba-config.jsonnet"
        - "--node-id"
        - "$(KOTOBA_NODE_ID)"
        - "--cluster-nodes"
        - "kotoba-cluster-0.kotoba-cluster.kotoba-system.svc.cluster.local:8080,kotoba-cluster-1.kotoba-cluster.kotoba-system.svc.cluster.local:8080,kotoba-cluster-2.kotoba-cluster.kotoba-system.svc.cluster.local:8080"
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: data
          mountPath: /data
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: kotoba-config
      - name: data
        persistentVolumeClaim:
          claimName: kotoba-storage-template
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: kotoba
        component: storage
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
      storageClassName: standard-rwo
