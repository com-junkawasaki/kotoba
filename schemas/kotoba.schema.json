{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/jun784/kotoba/refs/heads/main/kotoba.schema.json",
  "title": "Process Network as GTS(DPO)+OpenGraph with Merkle DAG & PG view",
  "type": "object",
  "required": ["typeGraph", "graphs"],
  "properties": {
    "meta": {
      "type": "object",
      "properties": {
        "model": { "type": "string", "const": "GTS-DPO-OpenGraph-Merkle" },
        "version": { "type": "string", "default": "0.2.0" },
        "cidAlgo": {
          "type": "object",
          "description": "Multicodec/Multihash/JCS parameters",
          "properties": {
            "hash": { "enum": ["sha2-256","blake3-256"] },
            "multicodec": { "type": "string", "default": "dag-json" },
            "canonicalJSON": { "enum": ["JCS-RFC8785"], "default": "JCS-RFC8785" }
          },
          "required": ["hash"]
        }
      }
    },

    "typeGraph": { "$ref": "#/$defs/GraphType" },

    "graphs": {
      "type": "array",
      "items": { "$ref": "#/$defs/GraphInstance" },
      "minItems": 1
    },

    "components": {
      "type": "array",
      "items": { "$ref": "#/$defs/Component" }
    },

    "rules": {
      "type": "array",
      "items": { "$ref": "#/$defs/RuleDPO" }
    },

    "strategies": {
      "type": "array",
      "items": { "$ref": "#/$defs/Strategy" }
    },

    "queries": {
      "type": "array",
      "items": { "$ref": "#/$defs/Query" }
    },

    "pgView": { "$ref": "#/$defs/PGView" }
  },

  "$defs": {
    "CID": {
      "type": "string",
      "description": "Content ID (CIDv1-like)",
      "pattern": "^[A-Za-z0-9_=-]{10,128}$"
    },

    "Id": {
      "type": "string",
      "pattern": "^[A-Za-z_][A-Za-z0-9_\\-:.]{0,127}$"
    },

    "Attrs": {
      "type": "object",
      "additionalProperties": { "type": ["string","number","boolean","null","array","object"] }
    },

    "Port": {
      "type": "object",
      "required": ["name","direction"],
      "properties": {
        "name": { "type": "string" },
        "direction": { "enum": ["in","out","bidirectional"] },
        "type": { "type": "string", "description": "Port type from typeGraph" },
        "multiplicity": { "type": "string", "pattern": "^(\\d+|\\d+\\.\\.\\*|\\*)$" },
        "attrs": { "$ref": "#/$defs/Attrs" }
      },
      "additionalProperties": false
    },

    "Node": {
      "type": "object",
      "required": ["cid","type"],
      "properties": {
        "cid": { "$ref": "#/$defs/CID" },
        "labels": { "type": "array", "items": { "type": "string" } },
        "type": { "type": "string" },
        "ports": { "type": "array", "items": { "$ref": "#/$defs/Port" }, "uniqueItems": true },
        "attrs": { "$ref": "#/$defs/Attrs" },
        "componentRef": { "type": "string", "description": "Component.id if this node instantiates a component" }
      },
      "additionalProperties": false
    },

    "Edge": {
      "type": "object",
      "required": ["cid","type","src","tgt"],
      "properties": {
        "cid": { "$ref": "#/$defs/CID" },
        "label": { "type": "string" },
        "type": { "type": "string" },
        "src": { "type": "string", "description": "source: nodeCID or #nodeCID.portName" },
        "tgt": { "type": "string", "description": "target: nodeCID or #nodeCID.portName" },
        "attrs": { "$ref": "#/$defs/Attrs" }
      },
      "additionalProperties": false
    },

    "Boundary": {
      "type": "object",
      "properties": {
        "expose": {
          "type": "array",
          "description": "Interface ports (open-graph boundary)",
          "items": { "type": "string", "description": "#nodeCID.portName" }
        },
        "constraints": { "$ref": "#/$defs/Attrs" }
      },
      "additionalProperties": false
    },

    "GraphCore": {
      "type": "object",
      "required": ["nodes","edges"],
      "properties": {
        "nodes": { "type": "array", "items": { "$ref": "#/$defs/Node" }, "uniqueItems": true },
        "edges": { "type": "array", "items": { "$ref": "#/$defs/Edge" }, "uniqueItems": true },
        "boundary": { "$ref": "#/$defs/Boundary" },
        "attrs": { "$ref": "#/$defs/Attrs" }
      }
    },

    "GraphType": {
      "allOf": [
        { "$ref": "#/$defs/GraphCore" },
        {
          "type": "object",
          "properties": {
            "kind": { "const": "type" },
            "cid": { "$ref": "#/$defs/CID" },
            "typing": { "type": "null", "description": "Typing not needed at type level" }
          }
        }
      ]
    },

    "Typing": {
      "type": "object",
      "properties": {
        "nodeTypes": { "type": "object", "additionalProperties": { "type": "string" } },
        "edgeTypes": { "type": "object", "additionalProperties": { "type": "string" } }
      }
    },

    "GraphInstance": {
      "allOf": [
        { "$ref": "#/$defs/GraphCore" },
        {
          "type": "object",
          "required": ["cid","kind"],
          "properties": {
            "kind": { "const": "instance" },
            "cid": { "$ref": "#/$defs/CID" },
            "typing": { "$ref": "#/$defs/Typing" }
          }
        }
      ]
    },

    "Morphisms": {
      "type": "object",
      "required": ["nodeMap","edgeMap"],
      "properties": {
        "nodeMap": { "type": "object", "additionalProperties": { "type": "string", "description": "to nodeCID" } },
        "edgeMap": { "type": "object", "additionalProperties": { "type": "string", "description": "to edgeCID" } },
        "portMap": { "type": "object", "additionalProperties": { "type": "string", "description": "to #nodeCID.portName" } }
      },
      "additionalProperties": false
    },

    "NAC": {
      "type": "object",
      "required": ["graph","morphismFromL"],
      "properties": {
        "id": { "$ref": "#/$defs/Id" },
        "graph": { "$ref": "#/$defs/GraphInstance" },
        "morphismFromL": { "$ref": "#/$defs/Morphisms" }
      },
      "additionalProperties": false
    },

    "RuleDPO": {
      "type": "object",
      "required": ["id","L","K","R","mL","mR"],
      "properties": {
        "id": { "$ref": "#/$defs/Id" },
        "L": { "$ref": "#/$defs/GraphInstance", "description": "pattern graph (immutable); has cid" },
        "K": { "$ref": "#/$defs/GraphInstance" },
        "R": { "$ref": "#/$defs/GraphInstance" },
        "mL": { "$ref": "#/$defs/Morphisms", "description": "K -> L (by CID)" },
        "mR": { "$ref": "#/$defs/Morphisms", "description": "K -> R (by CID)" },
        "nacs": { "type": "array", "items": { "$ref": "#/$defs/NAC" } },
        "appCond": {
          "type": "object",
          "properties": {
            "injective": { "type": "boolean", "default": true },
            "dangling": { "enum": ["forbid","allow-with-cleanup"], "default": "forbid" },
            "attrsGuard": { "$ref": "#/$defs/Attrs" }
          }
        },
        "effects": {
          "type": "object",
          "properties": {
            "cost": { "type": "number" },
            "labelsAdd": { "type": "array", "items": { "type": "string" } },
            "labelsRemove": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "additionalProperties": false
    },

    "Component": {
      "type": "object",
      "required": ["id","graph","interface"],
      "properties": {
        "id": { "$ref": "#/$defs/Id" },
        "graph": { "$ref": "#/$defs/GraphInstance" },
        "interface": {
          "type": "object",
          "required": ["in","out"],
          "properties": {
            "in": { "type": "array", "items": { "type": "string" } },
            "out": { "type": "array", "items": { "type": "string" } }
          }
        },
        "params": { "$ref": "#/$defs/Attrs" },
        "cid": { "$ref": "#/$defs/CID", "description": "Component CID (derived from graph.cid + interface)" }
      },
      "additionalProperties": false
    },

    "Strategy": {
      "type": "object",
      "required": ["id","body"],
      "properties": {
        "id": { "$ref": "#/$defs/Id" },
        "body": {
          "type": "object",
          "properties": {
            "seq": { "type": "array", "items": { "$ref": "#/$defs/Strategy" } },
            "choice": { "type": "array", "items": { "$ref": "#/$defs/Strategy" } },
            "repeat": { "$ref": "#/$defs/Strategy" },
            "guard": { "$ref": "#/$defs/Query" },
            "apply": { "type": "string", "description": "rule id" },
            "scope": { "type": "string", "description": "graph.cid or component.id" },
            "maxParallel": { "type": "integer", "minimum": 1 }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },

    "Query": {
      "type": "object",
      "required": ["id","pattern"],
      "properties": {
        "id": { "$ref": "#/$defs/Id" },
        "pattern": { "$ref": "#/$defs/GraphInstance" },
        "nacs": { "type": "array", "items": { "$ref": "#/$defs/NAC" } },
        "cost": {
          "type": "object",
          "properties": {
            "objective": { "enum": ["min","max"], "default": "min" },
            "expr": { "type": "string" }
          }
        },
        "limits": {
          "type": "object",
          "properties": {
            "maxSteps": { "type": "integer", "minimum": 0 },
            "timeoutMs": { "type": "integer", "minimum": 1 }
          }
        }
      },
      "additionalProperties": false
    },

    "PGView": {
      "type": "object",
      "properties": {
        "vertices": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id","originCID"],
            "properties": {
              "id": { "type": "string" },
              "labels": { "type": "array", "items": { "type": "string" } },
              "properties": { "$ref": "#/$defs/Attrs" },
              "originCID": { "$ref": "#/$defs/CID" }
            }
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id","outV","inV","originCID"],
            "properties": {
              "id": { "type": "string" },
              "label": { "type": "string" },
              "outV": { "type": "string" },
              "inV": { "type": "string" },
              "properties": { "$ref": "#/$defs/Attrs" },
              "originCID": { "$ref": "#/$defs/CID" }
            }
          }
        },
        "mapping": {
          "type": "object",
          "properties": {
            "nodeToVertex": { "type": "object", "additionalProperties": { "type": "string" } },
            "edgeToEdge": { "type": "object", "additionalProperties": { "type": "string" } }
          }
        }
      }
    }
  }
}
