[workspace]
members = [
    # Core crates only (published and stable)
    "crates/kotoba-core",          # v0.1.21 ✅
    "crates/kotoba-errors",        # v0.1.2 ✅
    "crates/kotoba-graph",         # v0.1.21 ✅
    "crates/kotoba-storage",       # v0.1.21 ✅
    "crates/kotoba-execution",     # v0.1.21 ✅
    "crates/kotoba-rewrite",       # v0.1.21 ✅
    "crates/kotoba-cli",           # v0.1.21 (core functionality only)
]
resolver = "2"

[workspace.package]
version = "0.1.21"
edition = "2021"
license = "Apache-2.0"
repository = "https://github.com/com-junkawasaki/kotoba"

[workspace.dependencies]
# Common dependencies can be defined here
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
thiserror = "2.0"
anyhow = "1.0"
uuid = { version = "1.18", features = ["v4", "serde"] }
sha2 = { version = "0.10", features = ["std"] }
hex = "0.4"
hmac = "0.12"
parking_lot = "0.12"
regex = "1.10"
rocksdb = "0.21"
tempfile = "3.0"
dirs = "5.0"
chrono = { version = "0.4", features = ["serde"] }
url = "2.5"
tokio = { version = "1.0", features = ["full"] }
wasmtime = "0.35"
rand = "0.8"
futures = "0.3"
base64 = "0.21"
reqwest = { version = "0.11", features = ["json", "multipart"] }
schemars = { version = "0.8", features = ["uuid1"] }
jsonschema = "0.17"
blake3 = "1.5"
tracing = "0.1"

# Fix digest version conflict
digest = "0.10.7"

# Core published crates only
kotoba-core = "0.1.21"
kotoba-errors = "0.1.2"
kotoba-graph = "0.1.21"
kotoba-storage = "0.1.21"
kotoba-execution = "0.1.21"
kotoba-rewrite = "0.1.21"

# Optional crates (commented out for core focus)
# kotoba-schema = { path = "crates/kotoba-schema", version = "0.1.15" }
# kotoba-jsonnet = { path = "crates/kotoba-jsonnet", version = "0.1.15" }
# kotoba-kotobas = { path = "crates/kotoba-kotobas", version = "0.1.0" }
# kotoba-security = { path = "crates/kotoba-security", version = "0.1.15" }
# kotoba-workflow = { path = "crates/kotoba-workflow", version = "0.1.15" }
# kotoba2tsx = { path = "crates/kotoba2tsx", version = "0.1.15" }
# kotoba-runtime = { path = "crates/kotoba-runtime", version = "0.1.0" }

# Core crates only (published versions)
# kotoba-distributed = { path = "crates/kotoba-distributed", version = "0.1.15" }
# kotoba-network = { path = "crates/kotoba-network", version = "0.1.15" }
# kotoba-cid = { path = "crates/kotoba-cid", version = "0.1.15" }
# kotoba-cli = { path = "crates/kotoba-cli", version = "0.1.15" }

# Root crate configuration
[package]
name = "kotoba-main"
version = "0.1.17"
edition = "2021"
description = "GP2-based Graph Rewriting Language - ISO GQL-compliant queries, MVCC+Merkle persistence, and distributed execution"
license = "Apache-2.0"
repository = "https://github.com/com-junkawasaki/kotoba"
keywords = ["graph", "database", "gql", "rewrite", "distributed"]
categories = ["database", "data-structures", "algorithms"]
authors = ["Jun Kawasaki <jun784@example.com>"]
readme = "README.md"
documentation = "https://docs.rs/kotoba"
homepage = "https://github.com/com-junkawasaki/kotoba"
exclude = ["examples/**/*", "tests/**/*", "src/topology.rs"]

[[bin]]
name = "kotoba"
path = "src/main.rs"


[profile.bench]
opt-level = 3
debug = false
strip = true
lto = true
codegen-units = 1
panic = "abort"

[dependencies]
# Core crates - workspace versions
# kotoba-core = { path = "crates/kotoba-core" } # Temporarily disabled to avoid confusion
kotoba-graph = { path = "crates/kotoba-graph" }
kotoba-storage = { path = "crates/kotoba-storage" }
kotoba-schema = { path = "crates/kotoba-schema" }
kotoba-execution = { path = "crates/kotoba-execution" }
kotoba-rewrite = { path = "crates/kotoba-rewrite" }
# kotoba-security.workspace = true
# kotoba-server = "0.1.1" # オプション機能のためコメントアウト

# Kotoba internal crates
kotoba-jsonnet = { path = "crates/kotoba-jsonnet" }
# kotoba-kotobanet = { path = "crates/kotoba-kotobanet" }  # まだ安定していないためコメントアウト

# New modular crates
kotoba-distributed = { path = "crates/kotoba-distributed" }
kotoba-network = { path = "crates/kotoba-network" }
kotoba-cid = { path = "crates/kotoba-cid" }
kotoba-cli = { path = "crates/kotoba-cli" }

# Schema and CID dependencies
schemars.workspace = true
jsonschema.workspace = true
blake3.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
hex.workspace = true
hmac = "0.12"
regex.workspace = true
thiserror.workspace = true
tempfile.workspace = true

# For binary
clap = { version = "4.0", features = ["derive"], optional = true }

# Optional crates for different use cases
tokio = { version = "1.0", features = ["full"], optional = true }
log = { version = "0.4", optional = true }
env_logger = { version = "0.11", optional = true }
uuid = { version = "1.0", features = ["v4"] }

# Vercel deployment
vercel_runtime = { version = "1.0", optional = true }
reqwest = { version = "0.11", features = ["json"], optional = true }

[features]
default = ["full"]
full = ["tokio", "log", "env_logger", "examples", "binary"]
binary = ["clap"]
examples = []
types = []
ir = []
graph = []
storage = []
execution = []
planner = []
rewrite = []
http = []
frontend = []
wasm = []
deploy = []
vercel = ["vercel_runtime", "reqwest"]
lsm = []

# Platform-specific features
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
web-sys = "0.3"
js-sys = "0.3"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.0"
quickcheck = "1.0"
rand = "0.8"
uuid = { version = "1.0", features = ["v4"] }
rayon = "1.7"

[[bench]]
name = "graph_operations"
path = "benches/graph_operations.rs"
harness = false

[[bench]]
name = "query_execution"
path = "benches/query_execution.rs"
harness = false

[[bench]]
name = "rewrite_operations"
path = "benches/rewrite_operations.rs"
harness = false

[[bench]]
name = "storage_operations"
path = "benches/storage_operations.rs"
harness = false

[[bench]]
name = "jsonnet_benchmark"
path = "benches/jsonnet_benchmark.rs"
harness = false

[[bench]]
name = "parallel_processing"
path = "benches/parallel_processing.rs"
harness = false

[[bench]]
name = "advanced_algorithms"
path = "benches/advanced_algorithms.rs"
harness = false

# Examples are excluded from publish to avoid dependency issues
# [[example]]
# name = "http_server"
# path = "examples/http_server/main.rs"

# Jsonnet benchmark binary removed due to compilation issues

# [[example]]
# name = "tauri_react_app"
# path = "examples/tauri_react_app/src-tauri/src/main.rs"
