{
   "topology_graph": {
      "edges": [
         {
            "from": "types",
            "to": "ir_catalog"
         },
         {
            "from": "types",
            "to": "schema_validator"
         },
         {
            "from": "types",
            "to": "ir_rule"
         },
         {
            "from": "types",
            "to": "ir_query"
         },
         {
            "from": "types",
            "to": "ir_patch"
         },
         {
            "from": "types",
            "to": "graph_vertex"
         },
         {
            "from": "types",
            "to": "graph_edge"
         },
         {
            "from": "types",
            "to": "storage_mvcc"
         },
         {
            "from": "types",
            "to": "storage_merkle"
         },
         {
            "from": "types",
            "to": "storage_lsm"
         },
         {
            "from": "types",
            "to": "storage_object"
         },
         {
            "from": "types",
            "to": "planner_logical"
         },
         {
            "from": "types",
            "to": "planner_physical"
         },
         {
            "from": "types",
            "to": "execution_parser"
         },
         {
            "from": "types",
            "to": "execution_engine"
         },
         {
            "from": "types",
            "to": "rewrite_matcher"
         },
         {
            "from": "types",
            "to": "rewrite_applier"
         },
         {
            "from": "types",
            "to": "rewrite_engine"
         },
         {
            "from": "types",
            "to": "lib"
         },
         {
            "from": "ir_catalog",
            "to": "lib"
         },
         {
            "from": "schema_validator",
            "to": "lib"
         },
         {
            "from": "ir_rule",
            "to": "lib"
         },
         {
            "from": "ir_query",
            "to": "lib"
         },
         {
            "from": "ir_patch",
            "to": "lib"
         },
         {
            "from": "ir_strategy",
            "to": "lib"
         },
         {
            "from": "ir_catalog",
            "to": "schema_validator"
         },
         {
            "from": "types",
            "to": "ir_strategy"
         },
         {
            "from": "ir_patch",
            "to": "ir_strategy"
         },
         {
            "from": "ir_strategy",
            "to": "rewrite_engine"
         },
         {
            "from": "types",
            "to": "ir_workflow"
         },
         {
            "from": "ir_strategy",
            "to": "ir_workflow"
         },
         {
            "from": "types",
            "to": "workflow_executor"
         },
         {
            "from": "types",
            "to": "workflow_store"
         },
         {
            "from": "ir_workflow",
            "to": "workflow_executor"
         },
         {
            "from": "ir_workflow",
            "to": "workflow_store"
         },
         {
            "from": "graph_core",
            "to": "workflow_executor"
         },
         {
            "from": "storage_mvcc",
            "to": "workflow_executor"
         },
         {
            "from": "storage_merkle",
            "to": "workflow_executor"
         },
         {
            "from": "execution_engine",
            "to": "workflow_executor"
         },
         {
            "from": "storage_mvcc",
            "to": "workflow_store"
         },
         {
            "from": "storage_merkle",
            "to": "workflow_store"
         },
         {
            "from": "types",
            "to": "workflow_designer"
         },
         {
            "from": "types",
            "to": "activity_libraries"
         },
         {
            "from": "ir_workflow",
            "to": "activity_libraries"
         },
         {
            "from": "workflow_executor",
            "to": "activity_libraries"
         },
         {
            "from": "types",
            "to": "kubernetes_operator"
         },
         {
            "from": "ir_workflow",
            "to": "kubernetes_operator"
         },
         {
            "from": "workflow_executor",
            "to": "kubernetes_operator"
         },
         {
            "from": "workflow_store",
            "to": "kubernetes_operator"
         },
         {
            "from": "types",
            "to": "cloud_integrations"
         },
         {
            "from": "types",
            "to": "graph_core"
         },
         {
            "from": "graph_vertex",
            "to": "graph_core"
         },
         {
            "from": "graph_edge",
            "to": "graph_core"
         },
         {
            "from": "graph_core",
            "to": "storage_mvcc"
         },
         {
            "from": "graph_core",
            "to": "storage_merkle"
         },
         {
            "from": "graph_core",
            "to": "planner_logical"
         },
         {
            "from": "graph_core",
            "to": "planner_physical"
         },
         {
            "from": "graph_core",
            "to": "execution_engine"
         },
         {
            "from": "graph_core",
            "to": "rewrite_matcher"
         },
         {
            "from": "graph_core",
            "to": "rewrite_applier"
         },
         {
            "from": "graph_core",
            "to": "rewrite_engine"
         },
         {
            "from": "graph_core",
            "to": "lib"
         },
         {
            "from": "storage_mvcc",
            "to": "execution_engine"
         },
         {
            "from": "storage_mvcc",
            "to": "rewrite_engine"
         },
         {
            "from": "storage_mvcc",
            "to": "lib"
         },
         {
            "from": "storage_merkle",
            "to": "execution_engine"
         },
         {
            "from": "storage_merkle",
            "to": "rewrite_engine"
         },
         {
            "from": "storage_merkle",
            "to": "lib"
         },
         {
            "from": "storage_lsm",
            "to": "lib"
         },
         {
            "from": "storage_object",
            "to": "lib"
         },
         {
            "from": "security_core",
            "to": "lib"
         },
         {
            "from": "ir_query",
            "to": "planner_logical"
         },
         {
            "from": "ir_catalog",
            "to": "planner_logical"
         },
         {
            "from": "ir_query",
            "to": "planner_physical"
         },
         {
            "from": "ir_catalog",
            "to": "planner_physical"
         },
         {
            "from": "types",
            "to": "planner_optimizer"
         },
         {
            "from": "ir_query",
            "to": "planner_optimizer"
         },
         {
            "from": "ir_catalog",
            "to": "planner_optimizer"
         },
         {
            "from": "graph_core",
            "to": "planner_optimizer"
         },
         {
            "from": "planner_logical",
            "to": "planner_optimizer"
         },
         {
            "from": "planner_physical",
            "to": "planner_optimizer"
         },
         {
            "from": "planner_logical",
            "to": "execution_engine"
         },
         {
            "from": "planner_physical",
            "to": "execution_engine"
         },
         {
            "from": "planner_optimizer",
            "to": "execution_engine"
         },
         {
            "from": "ir_query",
            "to": "execution_engine"
         },
         {
            "from": "ir_catalog",
            "to": "execution_engine"
         },
         {
            "from": "planner_logical",
            "to": "lib"
         },
         {
            "from": "planner_physical",
            "to": "lib"
         },
         {
            "from": "planner_optimizer",
            "to": "lib"
         },
         {
            "from": "ir_query",
            "to": "execution_parser"
         },
         {
            "from": "execution_parser",
            "to": "execution_engine"
         },
         {
            "from": "execution_parser",
            "to": "lib"
         },
         {
            "from": "execution_engine",
            "to": "lib"
         },
         {
            "from": "ir_rule",
            "to": "rewrite_matcher"
         },
         {
            "from": "ir_catalog",
            "to": "rewrite_matcher"
         },
         {
            "from": "ir_rule",
            "to": "rewrite_applier"
         },
         {
            "from": "ir_patch",
            "to": "rewrite_applier"
         },
         {
            "from": "ir_rule",
            "to": "rewrite_engine"
         },
         {
            "from": "rewrite_matcher",
            "to": "rewrite_engine"
         },
         {
            "from": "rewrite_applier",
            "to": "rewrite_engine"
         },
         {
            "from": "rewrite_matcher",
            "to": "lib"
         },
         {
            "from": "rewrite_applier",
            "to": "lib"
         },
         {
            "from": "rewrite_engine",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "security_jwt"
         },
         {
            "from": "types",
            "to": "security_oauth2"
         },
         {
            "from": "security_jwt",
            "to": "security_oauth2"
         },
         {
            "from": "types",
            "to": "security_mfa"
         },
         {
            "from": "types",
            "to": "security_password"
         },
         {
            "from": "types",
            "to": "security_session"
         },
         {
            "from": "types",
            "to": "security_capabilities"
         },
         {
            "from": "security_jwt",
            "to": "security_core"
         },
         {
            "from": "security_oauth2",
            "to": "security_core"
         },
         {
            "from": "security_mfa",
            "to": "security_core"
         },
         {
            "from": "security_password",
            "to": "security_core"
         },
         {
            "from": "security_session",
            "to": "security_core"
         },
         {
            "from": "security_capabilities",
            "to": "security_core"
         },
         {
            "from": "security_core",
            "to": "http_ir"
         },
         {
            "from": "jsonnet_error",
            "to": "jsonnet_value"
         },
         {
            "from": "jsonnet_error",
            "to": "jsonnet_lexer"
         },
         {
            "from": "jsonnet_value",
            "to": "jsonnet_ast"
         },
         {
            "from": "jsonnet_value",
            "to": "jsonnet_evaluator"
         },
         {
            "from": "jsonnet_value",
            "to": "jsonnet_stdlib"
         },
         {
            "from": "jsonnet_ast",
            "to": "jsonnet_parser"
         },
         {
            "from": "jsonnet_ast",
            "to": "jsonnet_evaluator"
         },
         {
            "from": "jsonnet_lexer",
            "to": "jsonnet_parser"
         },
         {
            "from": "jsonnet_parser",
            "to": "jsonnet_core"
         },
         {
            "from": "jsonnet_evaluator",
            "to": "jsonnet_core"
         },
         {
            "from": "jsonnet_stdlib",
            "to": "jsonnet_core"
         },
         {
            "from": "jsonnet_core",
            "to": "lib"
         },
         {
            "from": "jsonnet_core",
            "to": "http_parser"
         },
         {
            "from": "kotobanet_error",
            "to": "kotobanet_http_parser"
         },
         {
            "from": "kotobanet_error",
            "to": "kotobanet_frontend"
         },
         {
            "from": "kotobanet_error",
            "to": "kotobanet_deploy"
         },
         {
            "from": "kotobanet_error",
            "to": "kotobanet_config"
         },
         {
            "from": "kotobanet_error",
            "to": "kotobanet_core"
         },
         {
            "from": "jsonnet_core",
            "to": "kotobanet_http_parser"
         },
         {
            "from": "jsonnet_core",
            "to": "kotobanet_frontend"
         },
         {
            "from": "jsonnet_core",
            "to": "kotobanet_deploy"
         },
         {
            "from": "jsonnet_core",
            "to": "kotobanet_config"
         },
         {
            "from": "kotobanet_http_parser",
            "to": "kotobanet_core"
         },
         {
            "from": "kotobanet_frontend",
            "to": "kotobanet_core"
         },
         {
            "from": "kotobanet_deploy",
            "to": "kotobanet_core"
         },
         {
            "from": "kotobanet_config",
            "to": "kotobanet_core"
         },
         {
            "from": "kotobanet_core",
            "to": "lib"
         },
         {
            "from": "kotobanet_http_parser",
            "to": "http_parser"
         },
         {
            "from": "kotobanet_frontend",
            "to": "frontend_framework"
         },
         {
            "from": "kotobanet_deploy",
            "to": "deploy_parser"
         },
         {
            "from": "kotobanet_config",
            "to": "deploy_config"
         },
         {
            "from": "types",
            "to": "http_ir"
         },
         {
            "from": "ir_catalog",
            "to": "http_ir"
         },
         {
            "from": "security_core",
            "to": "http_ir"
         },
         {
            "from": "http_ir",
            "to": "http_parser"
         },
         {
            "from": "types",
            "to": "http_parser"
         },
         {
            "from": "http_ir",
            "to": "http_handlers"
         },
         {
            "from": "graph_core",
            "to": "http_handlers"
         },
         {
            "from": "rewrite_engine",
            "to": "http_handlers"
         },
         {
            "from": "storage_mvcc",
            "to": "http_handlers"
         },
         {
            "from": "storage_merkle",
            "to": "http_handlers"
         },
         {
            "from": "security_core",
            "to": "http_handlers"
         },
         {
            "from": "http_ir",
            "to": "http_engine"
         },
         {
            "from": "http_handlers",
            "to": "http_engine"
         },
         {
            "from": "graph_core",
            "to": "http_engine"
         },
         {
            "from": "storage_mvcc",
            "to": "http_engine"
         },
         {
            "from": "storage_merkle",
            "to": "http_engine"
         },
         {
            "from": "rewrite_engine",
            "to": "http_engine"
         },
         {
            "from": "security_core",
            "to": "http_engine"
         },
         {
            "from": "http_ir",
            "to": "http_server"
         },
         {
            "from": "http_parser",
            "to": "http_server"
         },
         {
            "from": "http_engine",
            "to": "http_server"
         },
         {
            "from": "http_handlers",
            "to": "http_server"
         },
         {
            "from": "types",
            "to": "graphql_schema"
         },
         {
            "from": "schema_validator",
            "to": "graphql_schema"
         },
         {
            "from": "types",
            "to": "graphql_handler"
         },
         {
            "from": "graphql_schema",
            "to": "graphql_handler"
         },
         {
            "from": "graphql_schema",
            "to": "kotoba_server"
         },
         {
            "from": "graphql_handler",
            "to": "kotoba_server"
         },
         {
            "from": "http_ir",
            "to": "lib"
         },
         {
            "from": "http_parser",
            "to": "lib"
         },
         {
            "from": "http_handlers",
            "to": "lib"
         },
         {
            "from": "http_engine",
            "to": "lib"
         },
         {
            "from": "http_server",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "frontend_component_ir"
         },
         {
            "from": "types",
            "to": "frontend_route_ir"
         },
         {
            "from": "frontend_component_ir",
            "to": "frontend_route_ir"
         },
         {
            "from": "types",
            "to": "frontend_render_ir"
         },
         {
            "from": "frontend_component_ir",
            "to": "frontend_render_ir"
         },
         {
            "from": "types",
            "to": "frontend_build_ir"
         },
         {
            "from": "frontend_component_ir",
            "to": "frontend_build_ir"
         },
         {
            "from": "types",
            "to": "frontend_api_ir"
         },
         {
            "from": "types",
            "to": "frontend_framework"
         },
         {
            "from": "frontend_component_ir",
            "to": "frontend_framework"
         },
         {
            "from": "frontend_route_ir",
            "to": "frontend_framework"
         },
         {
            "from": "frontend_render_ir",
            "to": "frontend_framework"
         },
         {
            "from": "frontend_build_ir",
            "to": "frontend_framework"
         },
         {
            "from": "frontend_api_ir",
            "to": "frontend_framework"
         },
         {
            "from": "http_ir",
            "to": "frontend_framework"
         },
         {
            "from": "frontend_component_ir",
            "to": "lib"
         },
         {
            "from": "frontend_route_ir",
            "to": "lib"
         },
         {
            "from": "frontend_render_ir",
            "to": "lib"
         },
         {
            "from": "frontend_build_ir",
            "to": "lib"
         },
         {
            "from": "frontend_api_ir",
            "to": "lib"
         },
         {
            "from": "frontend_framework",
            "to": "lib"
         },
         {
            "from": "lib",
            "to": "example_frontend_app"
         },
         {
            "from": "frontend_framework",
            "to": "example_frontend_app"
         },
         {
            "from": "kotoba_server",
            "to": "example_frontend_app"
         },
         {
            "from": "lib",
            "to": "example_http_server"
         },
         {
            "from": "kotoba_server",
            "to": "example_http_server"
         },
         {
            "from": "lib",
            "to": "example_social_network"
         },
         {
            "from": "graph_core",
            "to": "example_social_network"
         },
         {
            "from": "execution_engine",
            "to": "example_social_network"
         },
         {
            "from": "rewrite_engine",
            "to": "example_social_network"
         },
         {
            "from": "lib",
            "to": "example_tauri_react_app"
         },
         {
            "from": "frontend_framework",
            "to": "example_tauri_react_app"
         },
         {
            "from": "graph_core",
            "to": "example_tauri_react_app"
         },
         {
            "from": "storage_mvcc",
            "to": "example_tauri_react_app"
         },
         {
            "from": "storage_merkle",
            "to": "example_tauri_react_app"
         },
         {
            "from": "types",
            "to": "deploy_config"
         },
         {
            "from": "deploy_config",
            "to": "deploy_parser"
         },
         {
            "from": "types",
            "to": "deploy_parser"
         },
         {
            "from": "types",
            "to": "deploy_scaling"
         },
         {
            "from": "deploy_config",
            "to": "deploy_scaling"
         },
         {
            "from": "graph_core",
            "to": "deploy_scaling"
         },
         {
            "from": "types",
            "to": "deploy_network"
         },
         {
            "from": "deploy_config",
            "to": "deploy_network"
         },
         {
            "from": "deploy_scaling",
            "to": "deploy_network"
         },
         {
            "from": "types",
            "to": "deploy_git_integration"
         },
         {
            "from": "deploy_config",
            "to": "deploy_git_integration"
         },
         {
            "from": "deploy_network",
            "to": "deploy_git_integration"
         },
         {
            "from": "types",
            "to": "deploy_controller"
         },
         {
            "from": "deploy_config",
            "to": "deploy_controller"
         },
         {
            "from": "deploy_scaling",
            "to": "deploy_controller"
         },
         {
            "from": "deploy_network",
            "to": "deploy_controller"
         },
         {
            "from": "deploy_git_integration",
            "to": "deploy_controller"
         },
         {
            "from": "graph_core",
            "to": "deploy_controller"
         },
         {
            "from": "rewrite_engine",
            "to": "deploy_controller"
         },
         {
            "from": "types",
            "to": "deploy_cli"
         },
         {
            "from": "deploy_controller",
            "to": "deploy_cli"
         },
         {
            "from": "http_server",
            "to": "deploy_cli"
         },
         {
            "from": "types",
            "to": "deploy_runtime"
         },
         {
            "from": "deploy_controller",
            "to": "deploy_runtime"
         },
         {
            "from": "wasm",
            "to": "deploy_runtime"
         },
         {
            "from": "deploy_config",
            "to": "deploy_example_simple"
         },
         {
            "from": "deploy_config",
            "to": "deploy_example_microservices"
         },
         {
            "from": "deploy_example_simple",
            "to": "deploy_example_microservices"
         },
         {
            "from": "deploy_config",
            "to": "lib"
         },
         {
            "from": "deploy_parser",
            "to": "lib"
         },
         {
            "from": "deploy_scaling",
            "to": "lib"
         },
         {
            "from": "deploy_network",
            "to": "lib"
         },
         {
            "from": "deploy_git_integration",
            "to": "lib"
         },
         {
            "from": "deploy_controller",
            "to": "lib"
         },
         {
            "from": "deploy_cli",
            "to": "lib"
         },
         {
            "from": "deploy_runtime",
            "to": "lib"
         },
         {
            "from": "deploy_controller",
            "to": "deploy_hosting_server"
         },
         {
            "from": "http_server",
            "to": "deploy_hosting_server"
         },
         {
            "from": "frontend_framework",
            "to": "deploy_hosting_server"
         },
         {
            "from": "graph_core",
            "to": "deploy_hosting_server"
         },
         {
            "from": "execution_engine",
            "to": "deploy_hosting_server"
         },
         {
            "from": "storage_mvcc",
            "to": "deploy_hosting_server"
         },
         {
            "from": "storage_merkle",
            "to": "deploy_hosting_server"
         },
         {
            "from": "deploy_hosting_server",
            "to": "deploy_hosting_manager"
         },
         {
            "from": "deploy_scaling",
            "to": "deploy_hosting_manager"
         },
         {
            "from": "deploy_network",
            "to": "deploy_hosting_manager"
         },
         {
            "from": "deploy_hosting_manager",
            "to": "deploy_hosting_example"
         },
         {
            "from": "deploy_cli",
            "to": "deploy_hosting_example"
         },
         {
            "from": "deploy_hosting_server",
            "to": "lib"
         },
         {
            "from": "deploy_hosting_manager",
            "to": "lib"
         },
         {
            "from": "jsonnet_core",
            "to": "ai_agent_parser"
         },
         {
            "from": "kotobanet_core",
            "to": "ai_agent_parser"
         },
         {
            "from": "jsonnet_core",
            "to": "db_handler"
         },
         {
            "from": "execution_engine",
            "to": "db_handler"
         },
         {
            "from": "rewrite_engine",
            "to": "db_handler"
         },
         {
            "from": "ai_agent_parser",
            "to": "ai_runtime"
         },
         {
            "from": "jsonnet_core",
            "to": "ai_runtime"
         },
         {
            "from": "http_ir",
            "to": "ai_runtime"
         },
         {
            "from": "db_handler",
            "to": "ai_runtime"
         },
         {
            "from": "ai_runtime",
            "to": "ai_models"
         },
         {
            "from": "jsonnet_core",
            "to": "ai_models"
         },
         {
            "from": "ai_runtime",
            "to": "ai_tools"
         },
         {
            "from": "jsonnet_core",
            "to": "ai_tools"
         },
         {
            "from": "ai_runtime",
            "to": "ai_memory"
         },
         {
            "from": "storage_mvcc",
            "to": "ai_memory"
         },
         {
            "from": "storage_merkle",
            "to": "ai_memory"
         },
         {
            "from": "db_handler",
            "to": "ai_memory"
         },
         {
            "from": "ai_agent_parser",
            "to": "ai_chains"
         },
         {
            "from": "ai_runtime",
            "to": "ai_chains"
         },
         {
            "from": "ai_models",
            "to": "ai_chains"
         },
         {
            "from": "ai_tools",
            "to": "ai_chains"
         },
         {
            "from": "ai_memory",
            "to": "ai_chains"
         },
         {
            "from": "ai_chains",
            "to": "ai_examples"
         },
         {
            "from": "ai_models",
            "to": "ai_examples"
         },
         {
            "from": "ai_tools",
            "to": "ai_examples"
         },
         {
            "from": "ai_memory",
            "to": "ai_examples"
         },
         {
            "from": "ai_agent_parser",
            "to": "lib"
         },
         {
            "from": "ai_runtime",
            "to": "lib"
         },
         {
            "from": "ai_models",
            "to": "lib"
         },
         {
            "from": "ai_tools",
            "to": "lib"
         },
         {
            "from": "ai_memory",
            "to": "lib"
         },
         {
            "from": "ai_chains",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "deploy_cli_core"
         },
         {
            "from": "deploy_controller",
            "to": "deploy_cli_core"
         },
         {
            "from": "http_server",
            "to": "deploy_cli_core"
         },
         {
            "from": "deploy_cli_core",
            "to": "deploy_cli_binary"
         },
         {
            "from": "deploy_controller",
            "to": "deploy_cli_binary"
         },
         {
            "from": "deploy_scaling",
            "to": "deploy_cli_binary"
         },
         {
            "from": "deploy_network",
            "to": "deploy_cli_binary"
         },
         {
            "from": "deploy_runtime",
            "to": "deploy_cli_binary"
         },
         {
            "from": "types",
            "to": "deploy_controller_core"
         },
         {
            "from": "deploy_config",
            "to": "deploy_controller_core"
         },
         {
            "from": "deploy_scaling",
            "to": "deploy_controller_core"
         },
         {
            "from": "deploy_network",
            "to": "deploy_controller_core"
         },
         {
            "from": "deploy_git_integration",
            "to": "deploy_controller_core"
         },
         {
            "from": "graph_core",
            "to": "deploy_controller_core"
         },
         {
            "from": "rewrite_engine",
            "to": "deploy_controller_core"
         },
         {
            "from": "types",
            "to": "deploy_network_core"
         },
         {
            "from": "deploy_config",
            "to": "deploy_network_core"
         },
         {
            "from": "deploy_scaling",
            "to": "deploy_network_core"
         },
         {
            "from": "types",
            "to": "deploy_scaling_core"
         },
         {
            "from": "deploy_config",
            "to": "deploy_scaling_core"
         },
         {
            "from": "graph_core",
            "to": "deploy_scaling_core"
         },
         {
            "from": "deploy_controller_core",
            "to": "deploy_hosting_server"
         },
         {
            "from": "deploy_controller_core",
            "to": "deploy_hosting_manager"
         },
         {
            "from": "deploy_cli_core",
            "to": "lib"
         },
         {
            "from": "deploy_cli_binary",
            "to": "lib"
         },
         {
            "from": "deploy_controller_core",
            "to": "lib"
         },
         {
            "from": "deploy_network_core",
            "to": "lib"
         },
         {
            "from": "deploy_scaling_core",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "distributed_engine"
         },
         {
            "from": "graph_core",
            "to": "distributed_engine"
         },
         {
            "from": "execution_engine",
            "to": "distributed_engine"
         },
         {
            "from": "rewrite_engine",
            "to": "distributed_engine"
         },
         {
            "from": "storage_mvcc",
            "to": "distributed_engine"
         },
         {
            "from": "storage_merkle",
            "to": "distributed_engine"
         },
         {
            "from": "types",
            "to": "network_protocol"
         },
         {
            "from": "distributed_engine",
            "to": "network_protocol"
         },
         {
            "from": "types",
            "to": "cid_system"
         },
         {
            "from": "types",
            "to": "cli_interface"
         },
         {
            "from": "distributed_engine",
            "to": "cli_interface"
         },
         {
            "from": "network_protocol",
            "to": "cli_interface"
         },
         {
            "from": "cid_system",
            "to": "cli_interface"
         },
         {
            "from": "distributed_engine",
            "to": "lib"
         },
         {
            "from": "network_protocol",
            "to": "lib"
         },
         {
            "from": "cid_system",
            "to": "lib"
         },
         {
            "from": "cli_interface",
            "to": "lib"
         },
         {
            "from": "kotobanet_core",
            "to": "kotoba_lsp"
         },
         {
            "from": "jsonnet_core",
            "to": "kotoba_lsp"
         },
         {
            "from": "types",
            "to": "package_manager"
         },
         {
            "from": "cid_system",
            "to": "package_manager"
         },
         {
            "from": "distributed_engine",
            "to": "lib"
         },
         {
            "from": "network_protocol",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "state_graph_lib"
         },
         {
            "from": "rewrite_engine",
            "to": "state_graph_lib"
         },
         {
            "from": "execution_engine",
            "to": "state_graph_lib"
         },
         {
            "from": "state_graph_lib",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "docs_parser"
         },
         {
            "from": "docs_parser",
            "to": "docs_generator"
         },
         {
            "from": "docs_parser",
            "to": "docs_search"
         },
         {
            "from": "docs_parser",
            "to": "docs_core"
         },
         {
            "from": "types",
            "to": "docs_config"
         },
         {
            "from": "docs_config",
            "to": "docs_generator"
         },
         {
            "from": "docs_config",
            "to": "docs_core"
         },
         {
            "from": "types",
            "to": "docs_generator"
         },
         {
            "from": "docs_generator",
            "to": "docs_template"
         },
         {
            "from": "docs_generator",
            "to": "docs_server"
         },
         {
            "from": "docs_generator",
            "to": "docs_core"
         },
         {
            "from": "types",
            "to": "docs_template"
         },
         {
            "from": "docs_template",
            "to": "docs_core"
         },
         {
            "from": "types",
            "to": "docs_search"
         },
         {
            "from": "docs_search",
            "to": "docs_server"
         },
         {
            "from": "docs_search",
            "to": "docs_core"
         },
         {
            "from": "types",
            "to": "docs_server"
         },
         {
            "from": "http_ir",
            "to": "docs_server"
         },
         {
            "from": "docs_server",
            "to": "docs_core"
         },
         {
            "from": "types",
            "to": "docs_core"
         },
         {
            "from": "docs_core",
            "to": "docs_cli"
         },
         {
            "from": "docs_core",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "docs_cli"
         },
         {
            "from": "cli_interface",
            "to": "docs_cli"
         },
         {
            "from": "docs_cli",
            "to": "lib"
         },
         {
            "from": "types",
            "to": "db_core"
         },
         {
            "from": "cid_system",
            "to": "db_core"
         },
         {
            "from": "db_core",
            "to": "db_engine_memory"
         },
         {
            "from": "db_core",
            "to": "db_engine_lsm"
         },
         {
            "from": "db_core",
            "to": "db"
         },
         {
            "from": "db_engine_memory",
            "to": "db"
         },
         {
            "from": "db_engine_lsm",
            "to": "db"
         },
         {
            "from": "db_core",
            "to": "db_cluster"
         },
         {
            "from": "db",
            "to": "db_cluster"
         },
         {
            "from": "types",
            "to": "storage_main"
         },
         {
            "from": "errors",
            "to": "storage_main"
         },
         {
            "from": "graph",
            "to": "storage_main"
         },
         {
            "from": "cid",
            "to": "storage_main"
         },
         {
            "from": "storage_main",
            "to": "db"
         },
         {
            "from": "db",
            "to": "backup_restore"
         },
         {
            "from": "storage_main",
            "to": "backup_restore"
         },
         {
            "from": "db",
            "to": "monitoring_metrics"
         },
         {
            "from": "db_cluster",
            "to": "monitoring_metrics"
         },
         {
            "from": "db",
            "to": "config_management"
         },
         {
            "from": "db_cluster",
            "to": "config_management"
         },
         {
            "from": "db",
            "to": "benchmarking_suite"
         },
         {
            "from": "db_cluster",
            "to": "benchmarking_suite"
         },
         {
            "from": "db",
            "to": "profiling_tools"
         },
         {
            "from": "benchmarking_suite",
            "to": "profiling_tools"
         },
         {
            "from": "db",
            "to": "memory_optimization"
         },
         {
            "from": "profiling_tools",
            "to": "memory_optimization"
         },
         {
            "from": "db",
            "to": "integration_tests"
         },
         {
            "from": "db_cluster",
            "to": "integration_tests"
         },
         {
            "from": "benchmarking_suite",
            "to": "integration_tests"
         },
         {
            "from": "db",
            "to": "load_testing"
         },
         {
            "from": "db_cluster",
            "to": "load_testing"
         },
         {
            "from": "benchmarking_suite",
            "to": "load_testing"
         },
         {
            "from": "integration_tests",
            "to": "ci_cd_pipeline"
         },
         {
            "from": "load_testing",
            "to": "ci_cd_pipeline"
         },
         {
            "from": "benchmarking_suite",
            "to": "ci_cd_pipeline"
         },
         {
            "from": "db",
            "to": "api_reference"
         },
         {
            "from": "db_cluster",
            "to": "api_reference"
         },
         {
            "from": "db_cluster",
            "to": "deployment_guides"
         },
         {
            "from": "config_management",
            "to": "deployment_guides"
         },
         {
            "from": "api_reference",
            "to": "tutorials"
         },
         {
            "from": "deployment_guides",
            "to": "tutorials"
         },
         {
            "from": "db",
            "to": "sample_applications"
         },
         {
            "from": "db_cluster",
            "to": "sample_applications"
         },
         {
            "from": "tutorials",
            "to": "sample_applications"
         },
         {
            "from": "ci_cd_pipeline",
            "to": "contribution_guidelines"
         },
         {
            "from": "integration_tests",
            "to": "contribution_guidelines"
         },
         {
            "from": "sample_applications",
            "to": "open_source_release"
         },
         {
            "from": "contribution_guidelines",
            "to": "open_source_release"
         },
         {
            "from": "deployment_guides",
            "to": "open_source_release"
         },
         {
            "from": "db",
            "to": "multi_model_support"
         },
         {
            "from": "db_cluster",
            "to": "multi_model_support"
         },
         {
            "from": "db",
            "to": "machine_learning_integration"
         },
         {
            "from": "multi_model_support",
            "to": "machine_learning_integration"
         },
         {
            "from": "db_cluster",
            "to": "streaming_processing"
         },
         {
            "from": "multi_model_support",
            "to": "streaming_processing"
         },
         {
            "from": "db",
            "to": "advanced_query_language"
         },
         {
            "from": "multi_model_support",
            "to": "advanced_query_language"
         },
         {
            "from": "db_cluster",
            "to": "cloud_integrations"
         },
         {
            "from": "backup_restore",
            "to": "cloud_integrations"
         },
         {
            "from": "cloud_integrations_alt",
            "to": "serverless_deployment"
         },
         {
            "from": "monitoring_metrics",
            "to": "serverless_deployment"
         },
         {
            "from": "kotobanet_core",
            "to": "kotoba_lsp"
         },
         {
            "from": "types",
            "to": "markdown_parser"
         },
         {
            "from": "jsonnet_core",
            "to": "markdown_parser"
         },
         {
            "from": "types",
            "to": "html_template_engine"
         },
         {
            "from": "jsonnet_core",
            "to": "html_template_engine"
         },
         {
            "from": "markdown_parser",
            "to": "html_template_engine"
         },
         {
            "from": "types",
            "to": "static_site_generator"
         },
         {
            "from": "jsonnet_core",
            "to": "static_site_generator"
         },
         {
            "from": "markdown_parser",
            "to": "static_site_generator"
         },
         {
            "from": "html_template_engine",
            "to": "static_site_generator"
         },
         {
            "from": "http_ir",
            "to": "static_site_generator"
         },
         {
            "from": "types",
            "to": "github_pages_deployer"
         },
         {
            "from": "static_site_generator",
            "to": "github_pages_deployer"
         },
         {
            "from": "http_ir",
            "to": "github_pages_deployer"
         },
         {
            "from": "types",
            "to": "documentation_builder"
         },
         {
            "from": "static_site_generator",
            "to": "documentation_builder"
         },
         {
            "from": "docs_core",
            "to": "documentation_builder"
         },
         {
            "from": "ssg_assets",
            "to": "html_template_engine"
         },
         {
            "from": "ssg_assets",
            "to": "static_site_generator"
         },
         {
            "from": "ssg_examples",
            "to": "static_site_generator"
         },
         {
            "from": "project_documentation",
            "to": "documentation_builder"
         },
         {
            "from": "project_documentation",
            "to": "markdown_parser"
         },
         {
            "from": "site_build_output",
            "to": "site_index_html"
         },
         {
            "from": "markdown_parser",
            "to": "lib"
         },
         {
            "from": "html_template_engine",
            "to": "lib"
         },
         {
            "from": "static_site_generator",
            "to": "lib"
         },
         {
            "from": "github_pages_deployer",
            "to": "lib"
         },
         {
            "from": "documentation_builder",
            "to": "lib"
         },
         {
            "from": "ssg_assets",
            "to": "lib"
         },
         {
            "from": "ssg_examples",
            "to": "lib"
         },
         {
            "from": "project_documentation",
            "to": "lib"
         },
         {
            "from": "site_build_output",
            "to": "lib"
         },
         {
            "from": "site_index_html",
            "to": "lib"
         },
         {
            "from": "repl_tests",
            "to": "lib"
         },
         {
            "from": "general_tests",
            "to": "lib"
         },
         {
            "from": "cluster_tests",
            "to": "lib"
         },
         {
            "from": "docker_infrastructure",
            "to": "kubernetes_deployment"
         },
         {
            "from": "docker_infrastructure",
            "to": "lib"
         },
         {
            "from": "kubernetes_deployment",
            "to": "lib"
         },
         {
            "from": "nix_environment",
            "to": "lib"
         },
         {
            "from": "package_distribution",
            "to": "lib"
         },
         {
            "from": "build_scripts",
            "to": "lib"
         },
         {
            "from": "data_schemas",
            "to": "lib"
         },
         {
            "from": "project_schema",
            "to": "lib"
         },
         {
            "from": "topology_data",
            "to": "lib"
         },
         {
            "from": "types_codegen",
            "to": "lib"
         },
         {
            "from": "topology_validator",
            "to": "lib"
         },
         {
            "from": "research_documentation",
            "to": "lib"
         },
         {
            "from": "design_documentation",
            "to": "lib"
         },
         {
            "from": "publishing_guide",
            "to": "lib"
         },
         {
            "from": "capabilities_documentation",
            "to": "lib"
         },
         {
            "from": "roadmap_documentation",
            "to": "lib"
         },
         {
            "from": "rust_project_config",
            "to": "lib"
         },
         {
            "from": "license_documentation",
            "to": "lib"
         },
         {
            "from": "main_readme",
            "to": "lib"
         },
         {
            "from": "contribution_guide",
            "to": "lib"
         },
         {
            "from": "release_notes",
            "to": "lib"
         },
         {
            "from": "jsonnet_stdlib_ext",
            "to": "lib"
         },
         {
            "from": "compiled_binaries",
            "to": "lib"
         },
         {
            "from": "seo_configuration",
            "to": "lib"
         },
         {
            "from": "github_pages_domain",
            "to": "lib"
         },
         {
            "from": "code_coverage_data",
            "to": "lib"
         },
         {
            "from": "compatibility_reports",
            "to": "lib"
         },
         {
            "from": "release_artifacts",
            "to": "lib"
         },
         {
            "from": "arxiv_submission",
            "to": "lib"
         },
         {
            "from": "google_integration",
            "to": "lib"
         },
         {
            "from": "security_capabilities_documentation",
            "to": "lib"
         },
         {
            "from": "google_stdlib_implementation",
            "to": "lib"
         },
         {
            "from": "google_stdlib_tests",
            "to": "lib"
         },
         {
            "from": "compatibility_analysis",
            "to": "lib"
         },
         {
            "from": "graph_code_generation",
            "to": "lib"
         },
         {
            "from": "nix_environment_config",
            "to": "lib"
         },
         {
            "from": "nix_lock_file",
            "to": "lib"
         },
         {
            "from": "shell_nix_fallback",
            "to": "lib"
         },
         {
            "from": "schema_validator",
            "to": "schema_registry"
         },
         {
            "from": "ir_catalog",
            "to": "schema_registry"
         },
         {
            "from": "kotobas_parser",
            "to": "kotobas_ast"
         },
         {
            "from": "kotobas_ast",
            "to": "kotobas_compiler"
         },
         {
            "from": "schema_registry",
            "to": "kotobajs"
         },
         {
            "from": "http_server",
            "to": "kotobajs"
         },
         {
            "from": "kotobajs",
            "to": "kotoba_web"
         },
         {
            "from": "kotoba-workflow",
            "to": "kotoba_routing"
         },
         {
            "from": "kotoba-ssg",
            "to": "kotoba_routing"
         },
         {
            "from": "kotoba_routing",
            "to": "kotoba_server"
         }
      ],
      "nodes": {
         "activity_libraries": {
            "build_order": 10,
            "dependencies": [
               "types",
               "ir_workflow",
               "workflow_executor"
            ],
            "description": "Pre-built activity libraries (HTTP, Database, Cloud, etc.)",
            "name": "activity_libraries",
            "node_type": "ecosystem",
            "path": "crates/kotoba-workflow-activities/src/lib.rs",
            "provides": [
               "ActivityLibrary",
               "HttpActivities",
               "DatabaseActivities",
               "CloudActivities"
            ],
            "status": "planned"
         },
         "advanced_query_language": {
            "build_order": 20,
            "dependencies": [
               "db",
               "multi_model_support"
            ],
            "description": "Advanced query language with graph traversals and analytics.",
            "name": "advanced_query_language",
            "node_type": "advanced",
            "path": "crates/kotoba-query/",
            "provides": [
               "GraphQL",
               "Cypher",
               "GQL",
               "AnalyticsQueries"
            ],
            "status": "planned"
         },
         "ai_agent_parser": {
            "build_order": 20,
            "dependencies": [
               "kotobanet_core",
               "jsonnet_core"
            ],
            "description": "Jsonnet-based AI agent定義パーサー - .manimaniファイルの解析",
            "name": "ai_agent_parser",
            "node_type": "ai_agent",
            "path": "crates/kotoba-kotobas/src/ai_parser.rs",
            "provides": [
               "AiAgentParser",
               "AgentConfig",
               "ToolConfig",
               "ChainConfig"
            ],
            "status": "pending"
         },
         "ai_chains": {
            "build_order": 26,
            "dependencies": [
               "ai_agent_parser",
               "ai_runtime",
               "ai_models",
               "ai_tools",
               "ai_memory"
            ],
            "description": "AIチェーンシステム - 複数ステップのワークフロー実行",
            "name": "ai_chains",
            "node_type": "ai_agent",
            "path": "crates/kotoba-kotobas/src/ai_chains.rs",
            "provides": [
               "ChainExecutor",
               "SequentialChain",
               "ParallelChain",
               "ConditionalChain",
               "LoopChain"
            ],
            "status": "pending"
         },
         "ai_examples": {
            "build_order": 27,
            "dependencies": [
               "ai_chains",
               "ai_models",
               "ai_tools",
               "ai_memory"
            ],
            "description": "AI Agentの使用例 - Jsonnet-only AI agentアプリケーション",
            "name": "ai_examples",
            "node_type": "ai_example",
            "path": "examples/ai_agents/",
            "provides": [
               "ai_agent_examples",
               "chatbot_example",
               "code_assistant_example",
               "data_analyzer_example"
            ],
            "status": "pending"
         },
         "ai_memory": {
            "build_order": 25,
            "dependencies": [
               "ai_runtime",
               "storage_mvcc",
               "storage_merkle",
               "db_handler"
            ],
            "description": "AIメモリ管理 - 会話履歴、コンテキスト、状態管理",
            "name": "ai_memory",
            "node_type": "ai_agent",
            "path": "crates/kotoba-kotobas/src/ai_memory.rs",
            "provides": [
               "MemoryManager",
               "ConversationMemory",
               "VectorMemory",
               "StateManager"
            ],
            "status": "pending"
         },
         "ai_models": {
            "build_order": 23,
            "dependencies": [
               "ai_runtime",
               "jsonnet_core"
            ],
            "description": "AIモデル統合 - OpenAI, Anthropic, Google AIなどのAPI統合",
            "name": "ai_models",
            "node_type": "ai_agent",
            "path": "crates/kotoba-kotobas/src/ai_models.rs",
            "provides": [
               "OpenAiModel",
               "AnthropicModel",
               "GoogleAiModel",
               "ModelManager",
               "ApiClient"
            ],
            "status": "pending"
         },
         "ai_runtime": {
            "build_order": 22,
            "dependencies": [
               "ai_agent_parser",
               "jsonnet_core",
               "http_ir",
               "db_handler"
            ],
            "description": "AI Agent実行ランタイム - Jsonnet evaluator拡張によるAI処理",
            "name": "ai_runtime",
            "node_type": "ai_agent",
            "path": "crates/kotoba-kotobas/src/ai_runtime.rs",
            "provides": [
               "AiRuntime",
               "AgentExecutor",
               "AsyncEvaluator",
               "StreamingProcessor"
            ],
            "status": "pending"
         },
         "ai_tools": {
            "build_order": 24,
            "dependencies": [
               "ai_runtime",
               "jsonnet_core"
            ],
            "description": "AIツールシステム - 外部コマンド実行、関数呼び出し、データ処理",
            "name": "ai_tools",
            "node_type": "ai_agent",
            "path": "crates/kotoba-kotobas/src/ai_tools.rs",
            "provides": [
               "ToolExecutor",
               "CommandTool",
               "FunctionTool",
               "DataTool",
               "ToolRegistry"
            ],
            "status": "pending"
         },
         "api_reference": {
            "build_order": 14,
            "dependencies": [
               "db",
               "db_cluster"
            ],
            "description": "Complete API reference documentation.",
            "name": "api_reference",
            "node_type": "documentation",
            "path": "docs/api/",
            "provides": [
               "APIReference",
               "CodeExamples",
               "TypeDefinitions",
               "FunctionIndex"
            ],
            "status": "completed"
         },
         "arxiv_submission": {
            "build_order": 30,
            "dependencies": [
               "research_documentation"
            ],
            "description": "arXiv論文提出アーカイブ - 研究論文配布用パッケージ",
            "name": "arxiv_submission",
            "node_type": "research",
            "path": "artifacts/kotoba-arxiv-submission.tar.gz",
            "provides": [
               "ResearchPublication",
               "AcademicArchive",
               "PaperDistribution"
            ],
            "status": "completed"
         },
         "backup_restore": {
            "build_order": 9,
            "dependencies": [
               "db",
               "storage_main"
            ],
            "description": "Automated backup and restore system for KotobaDB.",
            "name": "backup_restore",
            "node_type": "operational",
            "path": "crates/kotoba-backup/",
            "provides": [
               "BackupManager",
               "RestoreManager",
               "PointInTimeRecovery"
            ],
            "status": "completed"
         },
         "benchmarking_suite": {
            "build_order": 10,
            "dependencies": [
               "db",
               "db_cluster"
            ],
            "description": "Comprehensive benchmarking suite for performance testing.",
            "name": "benchmarking_suite",
            "node_type": "performance",
            "path": "crates/kotoba-bench/",
            "provides": [
               "BenchmarkRunner",
               "PerformanceAnalyzer",
               "LoadGenerator",
               "MetricsReporter"
            ],
            "status": "completed"
         },
         "build_scripts": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "ビルド・デプロイスクリプト - 自動化ツールとユーティリティ",
            "name": "build_scripts",
            "node_type": "dev_tools",
            "path": "scripts/",
            "provides": [
               "BuildAutomation",
               "DeployScripts",
               "DevelopmentTools"
            ],
            "status": "completed"
         },
         "capabilities_documentation": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "能力ドキュメント - システムの機能と能力の説明",
            "name": "capabilities_documentation",
            "node_type": "documentation",
            "path": "CAPABILITIES_README.md",
            "provides": [
               "FeatureDocumentation",
               "CapabilityOverview",
               "SystemFeatures"
            ],
            "status": "completed"
         },
         "capabilities_documentation_ext": {
            "build_order": 1,
            "dependencies": [
               "security_capabilities"
            ],
            "description": "機能ベースセキュリティドキュメント - Denoに似たセキュリティシステム",
            "name": "capabilities_documentation_ext",
            "node_type": "documentation",
            "path": "examples/capabilities/README.md",
            "provides": [
               "SecurityDocumentation",
               "CapabilityExamples",
               "SecurityGuide"
            ],
            "status": "completed"
         },
         "ci_cd_pipeline": {
            "build_order": 13,
            "dependencies": [
               "integration_tests",
               "load_testing",
               "benchmarking_suite"
            ],
            "description": "CI/CD pipeline with automated testing and deployment.",
            "name": "ci_cd_pipeline",
            "node_type": "testing",
            "path": ".github/workflows/",
            "provides": [
               "CIPipeline",
               "AutoDeployment",
               "QualityGates",
               "ReleaseAutomation"
            ],
            "status": "completed"
         },
         "cid_system": {
            "build_order": 3,
            "dependencies": [
               "types"
            ],
            "description": "CID (Content ID) システム - Merkle DAGにおけるコンテンツアドレッシング",
            "name": "cid_system",
            "node_type": "cid",
            "path": "crates/kotoba-cid/src/lib.rs",
            "provides": [
               "CidCalculator",
               "CidManager",
               "MerkleTreeBuilder",
               "JsonCanonicalizer"
            ],
            "status": "planned"
         },
         "cli_interface": {
            "build_order": 10,
            "dependencies": [
               "types",
               "distributed_engine",
               "network_protocol",
               "cid_system"
            ],
            "description": "CLI - Denoを参考にしたコマンドラインインターフェース",
            "name": "cli_interface",
            "node_type": "cli",
            "path": "crates/kotoba-cli/src/lib.rs",
            "provides": [
               "Cli",
               "Commands",
               "ConfigManager",
               "ProgressBar",
               "LogFormatter"
            ],
            "status": "planned"
         },
         "cloud_integrations": {
            "build_order": 12,
            "dependencies": [
               "types"
            ],
            "description": "Cloud-native integrations (AWS, GCP, Azure)",
            "name": "cloud_integrations",
            "node_type": "ecosystem",
            "path": "crates/kotoba-cloud-integrations/src/lib.rs",
            "provides": [
               "CloudIntegrationManager",
               "AWSService",
               "GCPService",
               "AzureService"
            ],
            "status": "planned"
         },
         "cloud_integrations_alt": {
            "build_order": 21,
            "dependencies": [
               "db_cluster",
               "backup_restore"
            ],
            "description": "Cloud platform integrations (AWS, GCP, Azure).",
            "name": "cloud_integrations_alt",
            "node_type": "cloud",
            "path": "crates/kotoba-cloud/",
            "provides": [
               "AWSIntegration",
               "GCPIntegration",
               "AzureIntegration",
               "CloudFormation"
            ],
            "status": "planned"
         },
         "cluster_tests": {
            "build_order": 26,
            "dependencies": [
               "db_cluster",
               "distributed_engine"
            ],
            "description": "クラスターテスト - 分散システムテスト",
            "name": "cluster_tests",
            "node_type": "test",
            "path": "tests/",
            "provides": [
               "ClusterTestSuite",
               "DistributedTests",
               "ReplicationTests"
            ],
            "status": "completed"
         },
         "code_coverage_data": {
            "build_order": 20,
            "dependencies": [
               "rust_project_config"
            ],
            "description": "コードカバレッジデータ - テストカバレッジ分析",
            "name": "code_coverage_data",
            "node_type": "quality",
            "path": "artifacts/build_rs_cov.profraw",
            "provides": [
               "CoverageAnalysis",
               "TestQualityMetrics",
               "CodeQualityAssessment"
            ],
            "status": "completed"
         },
         "compatibility_analysis": {
            "build_order": 13,
            "dependencies": [
               "google_stdlib_implementation"
            ],
            "description": "Jsonnet互換性分析レポート - 実装状況と欠落機能の分析",
            "name": "compatibility_analysis",
            "node_type": "analysis",
            "path": "docs/jsonnet/compatibility_report.md",
            "provides": [
               "CompatibilityReport",
               "ImplementationStatus",
               "MissingFeatures"
            ],
            "status": "completed"
         },
         "compatibility_reports": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "互換性レポート - プラットフォーム互換性とテスト結果",
            "name": "compatibility_reports",
            "node_type": "quality",
            "path": "compatibility_report.md",
            "provides": [
               "PlatformCompatibility",
               "TestReports",
               "QualityMetrics"
            ],
            "status": "completed"
         },
         "compiled_binaries": {
            "build_order": 15,
            "dependencies": [
               "rust_project_config"
            ],
            "description": "コンパイル済みバイナリ - 事前ビルドされた実行ファイル",
            "name": "compiled_binaries",
            "node_type": "runtime_asset",
            "path": "artifacts/simple-static-build",
            "provides": [
               "PrebuiltBinaries",
               "QuickStart",
               "DistributionArtifacts"
            ],
            "status": "completed"
         },
         "config_management": {
            "build_order": 9,
            "dependencies": [
               "db",
               "db_cluster"
            ],
            "description": "Configuration management and CLI tools for operational tasks.",
            "name": "config_management",
            "node_type": "operational",
            "path": "crates/kotoba-config/",
            "provides": [
               "ConfigManager",
               "AdminCLI",
               "ClusterManager",
               "MigrationTools"
            ],
            "status": "completed"
         },
         "contribution_guide": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "貢献ガイド - 開発参加方法とワークフロー",
            "name": "contribution_guide",
            "node_type": "documentation",
            "path": "CONTRIBUTING.md",
            "provides": [
               "DevelopmentWorkflow",
               "ContributionProcess",
               "CodeStandards"
            ],
            "status": "completed"
         },
         "contribution_guidelines": {
            "build_order": 16,
            "dependencies": [
               "ci_cd_pipeline",
               "integration_tests"
            ],
            "description": "Comprehensive contribution guidelines and development workflow.",
            "name": "contribution_guidelines",
            "node_type": "community",
            "path": "CONTRIBUTING.md",
            "provides": [
               "ContributingGuide",
               "DevelopmentWorkflow",
               "CodeReviewProcess",
               "ReleaseProcess"
            ],
            "status": "completed"
         },
         "data_schemas": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "データスキーマ定義 - JSON Schema, データ構造定義",
            "name": "data_schemas",
            "node_type": "dev_tools",
            "path": "schemas/",
            "provides": [
               "SchemaValidation",
               "DataContracts",
               "TypeDefinitions"
            ],
            "status": "completed"
         },
         "db": {
            "build_order": 6,
            "dependencies": [
               "db_core",
               "db_engine_memory",
               "db_engine_lsm",
               "storage_main"
            ],
            "description": "User-facing API for KotobaDB, a graph-native, version-controlled database.",
            "name": "db",
            "node_type": "db_api",
            "path": "crates/kotoba-db/",
            "provides": [
               "KotobaDB",
               "DBSnapshot"
            ],
            "status": "planned"
         },
         "db_cluster": {
            "build_order": 8,
            "dependencies": [
               "db_core",
               "db"
            ],
            "description": "Distributed clustering and consensus for KotobaDB with Raft algorithm.",
            "name": "db_cluster",
            "node_type": "db_cluster",
            "path": "crates/kotoba-db-cluster/",
            "provides": [
               "KotobaCluster",
               "RaftConsensus",
               "PartitionManager",
               "ReplicationManager"
            ],
            "status": "planned"
         },
         "db_core": {
            "build_order": 4,
            "dependencies": [
               "types",
               "cid_system"
            ],
            "description": "Core traits, data structures, and transaction logic for KotobaDB.",
            "name": "db_core",
            "node_type": "db",
            "path": "crates/kotoba-db-core/",
            "provides": [
               "StorageEngine",
               "Transaction",
               "ACID"
            ],
            "status": "in_progress"
         },
         "db_engine_lsm": {
            "build_order": 5,
            "dependencies": [
               "db_core"
            ],
            "description": "LSM-Tree based high-performance storage engine for KotobaDB.",
            "name": "db_engine_lsm",
            "node_type": "db_engine",
            "path": "crates/kotoba-db-engine-lsm/",
            "provides": [
               "LSMStorageEngine",
               "WALManager",
               "SSTableManager"
            ],
            "status": "in_progress"
         },
         "db_engine_memory": {
            "build_order": 5,
            "dependencies": [
               "db_core"
            ],
            "description": "Default in-memory storage engine for KotobaDB.",
            "name": "db_engine_memory",
            "node_type": "db_engine",
            "path": "crates/kotoba-db-engine-memory/",
            "provides": [
               "MemoryStorageEngine"
            ],
            "status": "planned"
         },
         "db_handler": {
            "build_order": 21,
            "dependencies": [
               "jsonnet_core",
               "execution_engine",
               "rewrite_engine"
            ],
            "description": "Jsonnet evaluator handler for database operations (GQL Query, Rewrite Rules)",
            "name": "db_handler",
            "node_type": "runtime_extension",
            "path": "crates/kotoba-jsonnet/src/runtime/db.rs",
            "provides": [
               "DbHandler",
               "std.ext.db.query",
               "std.ext.db.rewrite",
               "std.ext.db.patch"
            ],
            "status": "in_progress"
         },
         "deploy_cli": {
            "build_order": 13,
            "dependencies": [
               "types",
               "deploy_controller",
               "http_server"
            ],
            "description": "kotoba deploy CLIコマンド",
            "name": "deploy_cli",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy-cli/src/lib.rs",
            "provides": [
               "DeployCLI"
            ],
            "status": "planned"
         },
         "deploy_cli_binary": {
            "build_order": 16,
            "dependencies": [
               "deploy_cli_core",
               "deploy_controller",
               "deploy_scaling",
               "deploy_network",
               "deploy_runtime"
            ],
            "description": "CLIバイナリ - 完全なデプロイメント処理、設定ファイル管理、進捗バー表示",
            "name": "deploy_cli_binary",
            "node_type": "deploy_cli",
            "path": "crates/kotoba-deploy-cli/src/main.rs",
            "provides": [
               "kotoba-deploy-cli"
            ],
            "status": "planned"
         },
         "deploy_cli_core": {
            "build_order": 15,
            "dependencies": [
               "types",
               "deploy_controller",
               "http_server"
            ],
            "description": "拡張CLIマネージャー - デプロイメント管理、設定管理、進捗表示",
            "name": "deploy_cli_core",
            "node_type": "deploy_cli",
            "path": "crates/kotoba-deploy-cli/src/lib.rs",
            "provides": [
               "CliManager",
               "DeploymentInfo",
               "OutputFormat",
               "FormatOutput"
            ],
            "status": "planned"
         },
         "deploy_config": {
            "build_order": 7,
            "dependencies": [
               "types"
            ],
            "description": "デプロイ設定のIR定義 (Jsonnetベースの.kotoba-deployファイル)",
            "name": "deploy_config",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy/src/config.rs",
            "provides": [
               "DeployConfig",
               "ScalingConfig",
               "RegionConfig"
            ],
            "status": "planned"
         },
         "deploy_controller": {
            "build_order": 12,
            "dependencies": [
               "types",
               "deploy_config",
               "deploy_scaling",
               "deploy_network",
               "deploy_git_integration",
               "graph_core",
               "rewrite_engine"
            ],
            "description": "ISO GQLを使用したデプロイコントロール",
            "name": "deploy_controller",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy/src/controller.rs",
            "provides": [
               "DeployController",
               "DeploymentManager"
            ],
            "status": "planned"
         },
         "deploy_controller_core": {
            "build_order": 17,
            "dependencies": [
               "types",
               "deploy_config",
               "deploy_scaling",
               "deploy_network",
               "deploy_git_integration",
               "graph_core",
               "rewrite_engine"
            ],
            "description": "高度なデプロイコントローラー - ロールバック、ブルーグリーン、カナリアデプロイ",
            "name": "deploy_controller_core",
            "node_type": "deploy_controller",
            "path": "crates/kotoba-deploy-controller/src/lib.rs",
            "provides": [
               "DeployController",
               "DeploymentHistoryManager",
               "RollbackManager",
               "BlueGreenDeploymentManager",
               "CanaryDeploymentManager",
               "HealthCheckManager"
            ],
            "status": "planned"
         },
         "deploy_example_microservices": {
            "build_order": 16,
            "dependencies": [
               "deploy_config",
               "deploy_example_simple"
            ],
            "description": "マイクロサービスデプロイメント設定例",
            "name": "deploy_example_microservices",
            "node_type": "deploy_example",
            "path": "examples/deploy/microservices.kotoba-deploy",
            "provides": [
               "microservices_deploy_example"
            ],
            "status": "pending"
         },
         "deploy_example_simple": {
            "build_order": 15,
            "dependencies": [
               "deploy_config"
            ],
            "description": "シンプルなデプロイメント設定例",
            "name": "deploy_example_simple",
            "node_type": "deploy_example",
            "path": "examples/deploy/simple.kotoba-deploy",
            "provides": [
               "simple_deploy_example"
            ],
            "status": "pending"
         },
         "deploy_git_integration": {
            "build_order": 11,
            "dependencies": [
               "types",
               "deploy_config",
               "deploy_network"
            ],
            "description": "GitHub連携と自動デプロイ",
            "name": "deploy_git_integration",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy/src/git_integration.rs",
            "provides": [
               "GitIntegration",
               "AutoDeploy",
               "WebhookHandler"
            ],
            "status": "planned"
         },
         "deploy_hosting_example": {
            "build_order": 19,
            "dependencies": [
               "deploy_hosting_manager",
               "deploy_cli"
            ],
            "description": "ホスティングサーバーの使用例",
            "name": "deploy_hosting_example",
            "node_type": "deploy_example",
            "path": "examples/deploy/hosting_example.rs",
            "provides": [
               "hosting_server_example"
            ],
            "status": "pending"
         },
         "deploy_hosting_manager": {
            "build_order": 18,
            "dependencies": [
               "deploy_hosting_server",
               "deploy_scaling",
               "deploy_network"
            ],
            "description": "ホスティングマネージャー - アプリのライフサイクル管理",
            "name": "deploy_hosting_manager",
            "node_type": "deploy",
            "path": "src/deploy/hosting_manager.rs",
            "provides": [
               "HostingManager",
               "DeploymentLifecycle"
            ],
            "status": "planned"
         },
         "deploy_hosting_server": {
            "build_order": 20,
            "dependencies": [
               "deploy_controller_core",
               "http_server",
               "frontend_framework",
               "graph_core",
               "execution_engine",
               "storage_mvcc",
               "storage_merkle"
            ],
            "description": "ホスティングサーバーの実装 - デプロイされたアプリをホスト",
            "name": "deploy_hosting_server",
            "node_type": "deploy",
            "path": "src/deploy/hosting_server.rs",
            "provides": [
               "HostingServer",
               "AppHost",
               "RuntimeManager"
            ],
            "status": "planned"
         },
         "deploy_network": {
            "build_order": 10,
            "dependencies": [
               "types",
               "deploy_config",
               "deploy_scaling"
            ],
            "description": "グローバル分散ネットワーク管理",
            "name": "deploy_network",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy/src/network.rs",
            "provides": [
               "NetworkManager",
               "RegionManager",
               "EdgeRouter"
            ],
            "status": "planned"
         },
         "deploy_network_core": {
            "build_order": 18,
            "dependencies": [
               "types",
               "deploy_config",
               "deploy_scaling"
            ],
            "description": "高度なネットワークマネージャー - CDN統合、セキュリティ、エッジ最適化",
            "name": "deploy_network_core",
            "node_type": "deploy_network",
            "path": "crates/kotoba-deploy-network/src/lib.rs",
            "provides": [
               "NetworkManager",
               "CdnManager",
               "SecurityManager",
               "GeoManager",
               "EdgeOptimizationManager"
            ],
            "status": "planned"
         },
         "deploy_parser": {
            "build_order": 8,
            "dependencies": [
               "types",
               "deploy_config"
            ],
            "description": ".kotoba-deployファイルのパーサー",
            "name": "deploy_parser",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy/src/parser.rs",
            "provides": [
               "DeployConfigParser"
            ],
            "status": "planned"
         },
         "deploy_runtime": {
            "build_order": 14,
            "dependencies": [
               "types",
               "deploy_controller",
               "wasm"
            ],
            "description": "デプロイ実行ランタイム (WebAssembly + WASM Edge対応)",
            "name": "deploy_runtime",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy/src/runtime.rs",
            "provides": [
               "DeployRuntime",
               "WasmRuntime"
            ],
            "status": "planned"
         },
         "deploy_scaling": {
            "build_order": 9,
            "dependencies": [
               "types",
               "deploy_config",
               "graph_core"
            ],
            "description": "自動スケーリングエンジン",
            "name": "deploy_scaling",
            "node_type": "deploy",
            "path": "crates/kotoba-deploy/src/scaling.rs",
            "provides": [
               "ScalingEngine",
               "LoadBalancer",
               "AutoScaler"
            ],
            "status": "planned"
         },
         "deploy_scaling_core": {
            "build_order": 19,
            "dependencies": [
               "types",
               "deploy_config",
               "graph_core"
            ],
            "description": "AI予測スケーリングエンジン - トラフィック予測、コスト最適化、異常検知",
            "name": "deploy_scaling_core",
            "node_type": "deploy_scaling",
            "path": "crates/kotoba-deploy-scaling/src/lib.rs",
            "provides": [
               "PredictiveScaler",
               "CostOptimizer",
               "AdvancedMetricsAnalyzer",
               "IntegratedScalingManager"
            ],
            "status": "planned"
         },
         "deployment_guides": {
            "build_order": 14,
            "dependencies": [
               "db_cluster",
               "config_management"
            ],
            "description": "Comprehensive deployment and operations guides.",
            "name": "deployment_guides",
            "node_type": "documentation",
            "path": "docs/deployment/",
            "provides": [
               "DeploymentGuide",
               "OperationsManual",
               "TroubleshootingGuide",
               "BestPractices"
            ],
            "status": "completed"
         },
         "design_documentation": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "設計ドキュメント - システムアーキテクチャと設計原則",
            "name": "design_documentation",
            "node_type": "documentation",
            "path": "DESIGN.md",
            "provides": [
               "SystemDesign",
               "ArchitectureDocs",
               "DesignPrinciples"
            ],
            "status": "completed"
         },
         "distributed_engine": {
            "build_order": 8,
            "dependencies": [
               "types",
               "graph_core",
               "execution_engine",
               "rewrite_engine",
               "storage_mvcc",
               "storage_merkle"
            ],
            "description": "分散実行エンジン - CIDベースの分散グラフ処理",
            "name": "distributed_engine",
            "node_type": "distributed",
            "path": "crates/kotoba-distributed/src/lib.rs",
            "provides": [
               "DistributedEngine",
               "CidCache",
               "ClusterManager",
               "DistributedTask",
               "TaskResult"
            ],
            "status": "planned"
         },
         "docker_infrastructure": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "Dockerコンテナ化設定 - アプリケーションのコンテナ化とデプロイ",
            "name": "docker_infrastructure",
            "node_type": "infrastructure",
            "path": ".devcontainer/Dockerfile",
            "provides": [
               "DockerImage",
               "ContainerDeployment",
               "RuntimeEnvironment"
            ],
            "status": "completed"
         },
         "docs_cli": {
            "build_order": 11,
            "dependencies": [
               "types",
               "docs_core",
               "cli_interface"
            ],
            "description": "CLI commands for documentation generation (generate, serve, search, init)",
            "name": "docs_cli",
            "node_type": "documentation_cli",
            "path": "crates/kotoba-cli/src/main.rs",
            "provides": [
               "docs generate",
               "docs serve",
               "docs search",
               "docs init"
            ],
            "status": "planned"
         },
         "docs_config": {
            "build_order": 3,
            "dependencies": [
               "types"
            ],
            "description": "Documentation configuration management and TOML/JSON/YAML parsing",
            "name": "docs_config",
            "node_type": "documentation",
            "path": "crates/kotoba-docs/src/config.rs",
            "provides": [
               "DocsConfig",
               "ConfigManager",
               "auto_detect_config",
               "create_default_config_file"
            ],
            "status": "planned"
         },
         "docs_core": {
            "build_order": 6,
            "dependencies": [
               "types",
               "docs_parser",
               "docs_config",
               "docs_generator",
               "docs_template",
               "docs_search",
               "docs_server"
            ],
            "description": "Kotoba Documentation Generator core library - main API and error handling",
            "name": "docs_core",
            "node_type": "documentation",
            "path": "crates/kotoba-docs/src/lib.rs",
            "provides": [
               "DocsError",
               "Result<T>",
               "DocType",
               "DocsConfig",
               "DocItem"
            ],
            "status": "planned"
         },
         "docs_generator": {
            "build_order": 4,
            "dependencies": [
               "types",
               "docs_parser",
               "docs_config"
            ],
            "description": "Documentation generation engine with HTML/Markdown/JSON output support",
            "name": "docs_generator",
            "node_type": "documentation",
            "path": "crates/kotoba-docs/src/generator.rs",
            "provides": [
               "DocGenerator",
               "OutputFormat",
               "GenerateResult",
               "DocItem"
            ],
            "status": "planned"
         },
         "docs_parser": {
            "build_order": 3,
            "dependencies": [
               "types"
            ],
            "description": "Multi-language source code parser for documentation generation (Rust, JS, TS, Python, Go)",
            "name": "docs_parser",
            "node_type": "documentation",
            "path": "crates/kotoba-docs/src/parser.rs",
            "provides": [
               "DocParser",
               "LanguageParser",
               "RustParser",
               "JavaScriptParser",
               "TypeScriptParser",
               "PythonParser",
               "GoParser"
            ],
            "status": "planned"
         },
         "docs_search": {
            "build_order": 4,
            "dependencies": [
               "types",
               "docs_parser"
            ],
            "description": "Full-text search engine with fuzzy matching and indexing",
            "name": "docs_search",
            "node_type": "documentation",
            "path": "crates/kotoba-docs/src/search.rs",
            "provides": [
               "SearchEngine",
               "SearchResult",
               "SearchOptions",
               "SearchEntry"
            ],
            "status": "planned"
         },
         "docs_server": {
            "build_order": 8,
            "dependencies": [
               "types",
               "docs_generator",
               "docs_search",
               "http_ir"
            ],
            "description": "Web server for documentation with REST API and static file serving",
            "name": "docs_server",
            "node_type": "documentation",
            "path": "crates/kotoba-docs/src/server.rs",
            "provides": [
               "DocServer",
               "ServerState",
               "SearchParams",
               "SearchResponse"
            ],
            "status": "planned"
         },
         "docs_template": {
            "build_order": 5,
            "dependencies": [
               "types",
               "docs_generator"
            ],
            "description": "Template engine for documentation with Tera integration and custom filters",
            "name": "docs_template",
            "node_type": "documentation",
            "path": "crates/kotoba-docs/src/template.rs",
            "provides": [
               "TemplateEngine",
               "TemplateContext",
               "TemplateFilter",
               "DocTemplate"
            ],
            "status": "planned"
         },
         "documentation_builder": {
            "build_order": 19,
            "dependencies": [
               "types",
               "static_site_generator",
               "docs_core",
               "project_documentation"
            ],
            "description": "ドキュメントビルダー - 技術ドキュメント特化のビルダー",
            "name": "documentation_builder",
            "node_type": "ssg",
            "path": "crates/kotoba-ssg/src/builder/documentation.rs",
            "provides": [
               "DocumentationBuilder",
               "ApiDocGenerator",
               "CodeExampleRenderer",
               "SearchIndexBuilder"
            ],
            "status": "planned"
         },
         "example_frontend_app": {
            "build_order": 12,
            "dependencies": [
               "lib",
               "frontend_framework",
               "kotoba_server"
            ],
            "description": "JsonnetベースのフルスタックWebフレームワークの使用例",
            "name": "example_frontend_app",
            "node_type": "example",
            "path": "examples/frontend_app/main.rs",
            "provides": [
               "frontend_app_example"
            ],
            "status": "planned"
         },
         "example_http_server": {
            "build_order": 12,
            "dependencies": [
               "lib",
               "kotoba_server"
            ],
            "description": "HTTPサーバーの使用例",
            "name": "example_http_server",
            "node_type": "example",
            "path": "examples/http_server/main.rs",
            "provides": [
               "http_server_example"
            ],
            "status": "planned"
         },
         "example_social_network": {
            "build_order": 12,
            "dependencies": [
               "lib",
               "graph_core",
               "execution_engine",
               "rewrite_engine"
            ],
            "description": "ソーシャルネットワークグラフ処理の使用例",
            "name": "example_social_network",
            "node_type": "example",
            "path": "examples/social_network/main.rs",
            "provides": [
               "social_network_example"
            ],
            "status": "planned"
         },
         "example_tauri_react_app": {
            "build_order": 13,
            "dependencies": [
               "lib",
               "frontend_framework",
               "graph_core",
               "storage_mvcc",
               "storage_merkle"
            ],
            "description": "Tauri + React + Kotoba Frontend Frameworkのデスクトップアプリケーション例",
            "name": "example_tauri_react_app",
            "node_type": "example",
            "path": "examples/tauri_react_app/main.rs",
            "provides": [
               "tauri_react_app_example"
            ],
            "status": "in_progress"
         },
         "execution_engine": {
            "build_order": 7,
            "dependencies": [
               "types",
               "ir_query",
               "ir_catalog",
               "graph_core",
               "storage_mvcc",
               "storage_merkle",
               "planner_logical",
               "planner_physical",
               "planner_optimizer",
               "execution_parser"
            ],
            "description": "クエリ実行器",
            "name": "execution_engine",
            "node_type": "execution",
            "path": "crates/kotoba-execution/src/execution/executor.rs",
            "provides": [
               "QueryExecutor"
            ],
            "status": "published"
         },
         "execution_parser": {
            "build_order": 5,
            "dependencies": [
               "types",
               "ir_query"
            ],
            "description": "GQLパーサー",
            "name": "execution_parser",
            "node_type": "execution",
            "path": "src/execution/gql_parser.rs",
            "provides": [
               "GqlParser"
            ],
            "status": "planned"
         },
         "frontend_api_ir": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "APIルートIR定義 (REST/GraphQL/WebSocket)",
            "name": "frontend_api_ir",
            "node_type": "frontend",
            "path": "src/frontend/api_ir.rs",
            "provides": [
               "ApiRouteIR",
               "DatabaseIR",
               "MiddlewareIR",
               "WebSocketIR"
            ],
            "status": "planned"
         },
         "frontend_build_ir": {
            "build_order": 4,
            "dependencies": [
               "types",
               "frontend_component_ir"
            ],
            "description": "ブイルド/バンドルシステムのIR定義",
            "name": "frontend_build_ir",
            "node_type": "frontend",
            "path": "src/frontend/build_ir.rs",
            "provides": [
               "BuildConfigIR",
               "BundleResultIR",
               "CodeSplittingIR"
            ],
            "status": "planned"
         },
         "frontend_component_ir": {
            "build_order": 3,
            "dependencies": [
               "types"
            ],
            "description": "ReactコンポーネントIR定義 (Server/Client Components, Props, State)",
            "name": "frontend_component_ir",
            "node_type": "frontend",
            "path": "src/frontend/component_ir.rs",
            "provides": [
               "ComponentIR",
               "ElementIR",
               "JSXIR",
               "HookIR"
            ],
            "status": "planned"
         },
         "frontend_framework": {
            "build_order": 5,
            "dependencies": [
               "types",
               "frontend_component_ir",
               "frontend_route_ir",
               "frontend_render_ir",
               "frontend_build_ir",
               "frontend_api_ir",
               "http_ir"
            ],
            "description": "Web Frameworkのコア実装",
            "name": "frontend_framework",
            "node_type": "frontend",
            "path": "src/frontend/framework.rs",
            "provides": [
               "WebFramework",
               "ComponentRenderer",
               "BuildEngine"
            ],
            "status": "in_progress"
         },
         "frontend_render_ir": {
            "build_order": 4,
            "dependencies": [
               "types",
               "frontend_component_ir"
            ],
            "description": "コンポーネントツリーとレンダリングエンジンのIR定義",
            "name": "frontend_render_ir",
            "node_type": "frontend",
            "path": "src/frontend/render_ir.rs",
            "provides": [
               "VirtualNodeIR",
               "RenderContext",
               "RenderResultIR",
               "DiffIR"
            ],
            "status": "planned"
         },
         "frontend_route_ir": {
            "build_order": 4,
            "dependencies": [
               "types",
               "frontend_component_ir"
            ],
            "description": "App RouterシステムIR定義 (ファイルベースルーティング, Layout, Loading, Error境界)",
            "name": "frontend_route_ir",
            "node_type": "frontend",
            "path": "src/frontend/route_ir.rs",
            "provides": [
               "RouteIR",
               "RouteTableIR",
               "NavigationIR"
            ],
            "status": "planned"
         },
         "general_tests": {
            "build_order": 25,
            "dependencies": [
               "types"
            ],
            "description": "一般的なテストスイート - 基本機能テスト",
            "name": "general_tests",
            "node_type": "test",
            "path": "tests/",
            "provides": [
               "GeneralTestSuite",
               "UnitTests",
               "IntegrationTests"
            ],
            "status": "completed"
         },
         "github_pages_deployer": {
            "build_order": 18,
            "dependencies": [
               "types",
               "static_site_generator",
               "http_ir"
            ],
            "description": "GitHub Pagesデプロイヤー - GitHub Pagesへの自動デプロイメント",
            "name": "github_pages_deployer",
            "node_type": "ssg",
            "path": "crates/kotoba-ssg/src/deploy/github_pages.rs",
            "provides": [
               "GitHubPagesDeployer",
               "GitIntegration",
               "CNAMEHandler",
               "RedirectManager"
            ],
            "status": "planned"
         },
         "github_pages_domain": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "GitHub Pagesドメイン設定 - カスタムドメイン設定",
            "name": "github_pages_domain",
            "node_type": "deployment",
            "path": "CNAME",
            "provides": [
               "CustomDomain",
               "DNSConfiguration",
               "PageRouting"
            ],
            "status": "completed"
         },
         "google_integration": {
            "build_order": 10,
            "dependencies": [
               "jsonnet_core"
            ],
            "description": "Google統合ファイル - Jsonnet標準ライブラリ統合",
            "name": "google_integration",
            "node_type": "integration",
            "path": "crates/kotoba-jsonnet/src/google_functions.txt",
            "provides": [
               "GoogleServices",
               "JsonnetStdlib",
               "ExternalIntegrations"
            ],
            "status": "completed"
         },
         "google_stdlib_implementation": {
            "build_order": 11,
            "dependencies": [
               "jsonnet_core"
            ],
            "description": "Google Jsonnet標準ライブラリ実装 - 完全なJsonnet std.*関数群",
            "name": "google_stdlib_implementation",
            "node_type": "jsonnet_extension",
            "path": "crates/kotoba-jsonnet/src/google_stdlib.jsonnet",
            "provides": [
               "GoogleStdlib",
               "JsonnetCompatibility",
               "ExtendedStdlib"
            ],
            "status": "completed"
         },
         "google_stdlib_tests": {
            "build_order": 12,
            "dependencies": [
               "google_stdlib_implementation"
            ],
            "description": "Google Jsonnet標準ライブラリテストスイート",
            "name": "google_stdlib_tests",
            "node_type": "test",
            "path": "crates/kotoba-jsonnet/src/tests/google_stdlib_test.jsonnet",
            "provides": [
               "JsonnetTestSuite",
               "CompatibilityTests",
               "StdlibValidation"
            ],
            "status": "completed"
         },
         "graph_code_generation": {
            "build_order": 6,
            "dependencies": [
               "graph_core",
               "jsonnet_core"
            ],
            "description": "グラフ構造コード生成 - Jsonnet DSLからのRustコード生成",
            "name": "graph_code_generation",
            "node_type": "code_generation",
            "path": "src/codegen/graph_converted.json",
            "provides": [
               "GraphDSL",
               "CodeGeneration",
               "TypeConversion"
            ],
            "status": "completed"
         },
         "graph_core": {
            "build_order": 3,
            "dependencies": [
               "types",
               "graph_vertex",
               "graph_edge"
            ],
            "description": "列指向グラフ表現とGraphRef",
            "name": "graph_core",
            "node_type": "graph",
            "path": "src/graph/graph.rs",
            "provides": [
               "Graph",
               "GraphRef"
            ],
            "status": "planned"
         },
         "graph_edge": {
            "build_order": 2,
            "dependencies": [
               "types"
            ],
            "description": "エッジ関連構造体とビルダー",
            "name": "graph_edge",
            "node_type": "graph",
            "path": "src/graph/edge.rs",
            "provides": [
               "EdgeBuilder",
               "EdgeData"
            ],
            "status": "planned"
         },
         "graph_vertex": {
            "build_order": 2,
            "dependencies": [
               "types"
            ],
            "description": "頂点関連構造体とビルダー",
            "name": "graph_vertex",
            "node_type": "graph",
            "path": "src/graph/vertex.rs",
            "provides": [
               "VertexBuilder",
               "VertexData"
            ],
            "status": "planned"
         },
         "graphql_handler": {
            "build_order": 9,
            "dependencies": [
               "types",
               "graphql_schema"
            ],
            "description": "GraphQLリクエスト処理と実行エンジン",
            "name": "graphql_handler",
            "node_type": "graphql",
            "path": "crates/kotoba-server/src/http/graphql.rs",
            "provides": [
               "GraphQLHandler",
               "RequestExecutor"
            ],
            "status": "planned"
         },
         "graphql_schema": {
            "build_order": 9,
            "dependencies": [
               "types",
               "schema_validator"
            ],
            "description": "GraphQLスキーマ定義とスキーマ管理操作",
            "name": "graphql_schema",
            "node_type": "graphql",
            "path": "crates/kotoba-server/src/http/graphql.rs",
            "provides": [
               "GraphQLSchema",
               "SchemaMutations",
               "SchemaQueries"
            ],
            "status": "planned"
         },
         "html_template_engine": {
            "build_order": 16,
            "dependencies": [
               "types",
               "jsonnet_core",
               "markdown_parser"
            ],
            "description": "HTMLテンプレートエンジン - Jsonnetベースのテンプレート処理",
            "name": "html_template_engine",
            "node_type": "ssg",
            "path": "crates/kotoba-ssg/src/template/engine.rs",
            "provides": [
               "TemplateEngine",
               "LayoutRenderer",
               "PartialRenderer",
               "AssetManager"
            ],
            "status": "planned"
         },
         "http_engine": {
            "build_order": 9,
            "dependencies": [
               "types",
               "http_ir",
               "http_handlers",
               "graph_core",
               "storage_mvcc",
               "storage_merkle",
               "rewrite_engine",
               "security_core"
            ],
            "description": "HTTPサーバーエンジン",
            "name": "http_engine",
            "node_type": "http",
            "path": "src/http/engine.rs",
            "provides": [
               "HttpEngine",
               "ServerState"
            ],
            "status": "pending"
         },
         "http_handlers": {
            "build_order": 8,
            "dependencies": [
               "types",
               "http_ir",
               "graph_core",
               "rewrite_engine",
               "storage_mvcc",
               "storage_merkle",
               "security_core"
            ],
            "description": "HTTPハンドラーとミドルウェア処理",
            "name": "http_handlers",
            "node_type": "http",
            "path": "src/http/handlers.rs",
            "provides": [
               "HttpHandler",
               "MiddlewareProcessor",
               "RequestProcessor"
            ],
            "status": "pending"
         },
         "http_ir": {
            "build_order": 7,
            "dependencies": [
               "types",
               "ir_catalog",
               "security_core"
            ],
            "description": "HTTPサーバー用IR定義 (Route, Middleware, Request, Response)",
            "name": "http_ir",
            "node_type": "http",
            "path": "src/http/ir.rs",
            "provides": [
               "HttpRoute",
               "HttpMiddleware",
               "HttpRequest",
               "HttpResponse",
               "HttpConfig"
            ],
            "status": "planned"
         },
         "http_parser": {
            "build_order": 5,
            "dependencies": [
               "types",
               "http_ir"
            ],
            "description": ".kotoba.json/.kotobaファイル（Jsonnet形式）のパーサー",
            "name": "http_parser",
            "node_type": "http",
            "path": "src/http/parser.rs",
            "provides": [
               "HttpConfigParser",
               "KotobaParser"
            ],
            "status": "pending"
         },
         "http_server": {
            "build_order": 10,
            "dependencies": [
               "types",
               "http_ir",
               "http_parser",
               "http_engine",
               "http_handlers",
               "graphql_schema",
               "graphql_handler"
            ],
            "description": "メインHTTPサーバー",
            "name": "http_server",
            "node_type": "http",
            "path": "crates/kotoba-server/src/http/server.rs",
            "provides": [
               "HttpServer",
               "ServerBuilder"
            ],
            "status": "planned"
         },
         "integration_tests": {
            "build_order": 12,
            "dependencies": [
               "db",
               "db_cluster",
               "benchmarking_suite"
            ],
            "description": "Comprehensive integration test suite.",
            "name": "integration_tests",
            "node_type": "testing",
            "path": "tests/integration/",
            "provides": [
               "IntegrationTestSuite",
               "EndToEndTests",
               "ClusterTests"
            ],
            "status": "completed"
         },
         "ir_catalog": {
            "build_order": 2,
            "dependencies": [
               "types"
            ],
            "description": "スキーマ/索引/不変量定義",
            "name": "ir_catalog",
            "node_type": "ir",
            "path": "crates/kotoba-core/src/ir/catalog.rs",
            "provides": [
               "Catalog",
               "LabelDef",
               "IndexDef",
               "Invariant"
            ],
            "status": "published"
         },
         "ir_patch": {
            "build_order": 2,
            "dependencies": [
               "types"
            ],
            "description": "差分表現 (addV/E, delV/E, setProp, relink)",
            "name": "ir_patch",
            "node_type": "ir",
            "path": "crates/kotoba-core/src/ir/patch.rs",
            "provides": [
               "Patch",
               "AddVertex",
               "AddEdge",
               "UpdateProp"
            ],
            "status": "planned"
         },
         "ir_query": {
            "build_order": 2,
            "dependencies": [
               "types"
            ],
            "description": "GQL論理プラン代数",
            "name": "ir_query",
            "node_type": "ir",
            "path": "crates/kotoba-core/src/ir/query.rs",
            "provides": [
               "PlanIR",
               "LogicalOp",
               "Expr",
               "Predicate"
            ],
            "status": "published"
         },
         "ir_rule": {
            "build_order": 2,
            "dependencies": [
               "types"
            ],
            "description": "DPO型付き属性グラフ書換えルール",
            "name": "ir_rule",
            "node_type": "ir",
            "path": "crates/kotoba-core/src/ir/rule.rs",
            "provides": [
               "RuleIR",
               "Match",
               "Guard"
            ],
            "status": "published"
         },
         "ir_strategy": {
            "build_order": 3,
            "dependencies": [
               "types",
               "ir_patch"
            ],
            "description": "戦略表現 (once|exhaust|while|seq|choice|priority)",
            "name": "ir_strategy",
            "node_type": "ir",
            "path": "crates/kotoba-core/src/ir/strategy.rs",
            "provides": [
               "StrategyIR",
               "StrategyOp",
               "StrategyResult",
               "Externs"
            ],
            "status": "planned"
         },
         "ir_workflow": {
            "build_order": 4,
            "dependencies": [
               "types",
               "ir_strategy"
            ],
            "description": "TemporalベースワークフローIR (WorkflowIR, Activity, Saga)",
            "name": "ir_workflow",
            "node_type": "workflow",
            "path": "crates/kotoba-workflow/src/ir.rs",
            "provides": [
               "WorkflowIR",
               "ActivityIR",
               "WorkflowExecution",
               "SagaPattern"
            ],
            "status": "planned"
         },
         "jsonnet_ast": {
            "build_order": 3,
            "dependencies": [
               "jsonnet_value"
            ],
            "description": "Jsonnet抽象構文木定義 (Expr, ObjectField, BinaryOp, etc.)",
            "name": "jsonnet_ast",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/ast.rs",
            "provides": [
               "Expr",
               "Stmt",
               "Program",
               "ObjectField",
               "BinaryOp",
               "UnaryOp"
            ],
            "status": "planned"
         },
         "jsonnet_core": {
            "build_order": 6,
            "dependencies": [
               "jsonnet_evaluator",
               "jsonnet_stdlib"
            ],
            "description": "JsonnetコアAPI - evaluate(), evaluate_to_json(), evaluate_to_yaml()",
            "name": "jsonnet_core",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/lib.rs",
            "provides": [
               "evaluate",
               "evaluate_with_filename",
               "evaluate_to_json",
               "evaluate_to_yaml",
               "VERSION"
            ],
            "status": "planned"
         },
         "jsonnet_error": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "Jsonnet評価エラー定義 (JsonnetError, Result)",
            "name": "jsonnet_error",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/error.rs",
            "provides": [
               "JsonnetError",
               "Result<T>"
            ],
            "status": "planned"
         },
         "jsonnet_evaluator": {
            "build_order": 5,
            "dependencies": [
               "jsonnet_ast",
               "jsonnet_value"
            ],
            "description": "Jsonnet評価器 (Evaluator) - 式評価と実行",
            "name": "jsonnet_evaluator",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/evaluator.rs",
            "provides": [
               "Evaluator"
            ],
            "status": "planned"
         },
         "jsonnet_lexer": {
            "build_order": 2,
            "dependencies": [
               "jsonnet_error"
            ],
            "description": "Jsonnet字句解析器 (Lexer) - トークン化",
            "name": "jsonnet_lexer",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/lexer.rs",
            "provides": [
               "Lexer",
               "Token",
               "TokenWithPos",
               "Position"
            ],
            "status": "planned"
         },
         "jsonnet_parser": {
            "build_order": 4,
            "dependencies": [
               "jsonnet_ast",
               "jsonnet_lexer"
            ],
            "description": "Jsonnet構文解析器 (Parser) - AST構築",
            "name": "jsonnet_parser",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/parser.rs",
            "provides": [
               "Parser",
               "GqlToken"
            ],
            "status": "planned"
         },
         "jsonnet_stdlib": {
            "build_order": 5,
            "dependencies": [
               "jsonnet_value"
            ],
            "description": "Jsonnet標準ライブラリ (80+関数) - std.*関数群",
            "name": "jsonnet_stdlib",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/stdlib.rs",
            "provides": [
               "StdLib",
               "std_length",
               "std_type",
               "std_makeArray",
               "std_filter",
               "std_map",
               "std_foldl",
               "std_foldr",
               "std_range",
               "std_join",
               "std_split",
               "std_contains",
               "std_startsWith",
               "std_endsWith",
               "std_substr",
               "std_char",
               "std_codepoint",
               "std_toString",
               "std_parseInt",
               "std_parseJson",
               "std_encodeUTF8",
               "std_decodeUTF8",
               "std_md5",
               "std_base64",
               "std_base64Decode",
               "std_manifestJson",
               "std_manifestJsonEx",
               "std_manifestYaml",
               "std_escapeStringJson",
               "std_escapeStringYaml",
               "std_escapeStringPython",
               "std_escapeStringBash",
               "std_escapeStringDollars",
               "std_stringChars",
               "std_stringBytes",
               "std_format",
               "std_isArray",
               "std_isBoolean",
               "std_isFunction",
               "std_isNumber",
               "std_isObject",
               "std_isString",
               "std_count",
               "std_find",
               "std_member",
               "std_modulo",
               "std_pow",
               "std_exp",
               "std_log",
               "std_sqrt",
               "std_sin",
               "std_cos",
               "std_tan",
               "std_asin",
               "std_acos",
               "std_atan",
               "std_floor",
               "std_ceil",
               "std_round",
               "std_abs",
               "std_max",
               "std_min",
               "std_clamp",
               "std_assertEqual",
               "std_sort",
               "std_uniq",
               "std_reverse",
               "std_mergePatch",
               "std_get",
               "std_objectFields",
               "std_objectFieldsAll",
               "std_objectHas",
               "std_objectHasAll",
               "std_objectValues",
               "std_objectValuesAll",
               "std_prune",
               "std_mapWithKey"
            ],
            "status": "planned"
         },
         "jsonnet_stdlib_ext": {
            "build_order": 10,
            "dependencies": [
               "jsonnet_core"
            ],
            "description": "Jsonnet標準ライブラリ拡張 - Jsonnetランタイム拡張",
            "name": "jsonnet_stdlib_ext",
            "node_type": "runtime_asset",
            "path": "config/lib.jsonnet",
            "provides": [
               "JsonnetExtensions",
               "StandardLibrary",
               "RuntimeFunctions"
            ],
            "status": "completed"
         },
         "jsonnet_value": {
            "build_order": 2,
            "dependencies": [
               "jsonnet_error"
            ],
            "description": "Jsonnet値型定義 (JsonnetValue, JsonnetFunction)",
            "name": "jsonnet_value",
            "node_type": "jsonnet",
            "path": "crates/kotoba-jsonnet/src/value.rs",
            "provides": [
               "JsonnetValue",
               "JsonnetFunction"
            ],
            "status": "planned"
         },
         "kotoba_lsp": {
            "build_order": 10,
            "dependencies": [
               "kotobanet_core",
               "jsonnet_core"
            ],
            "description": "Language Server Protocol implementation for Kotoba language",
            "name": "kotoba_lsp",
            "node_type": "lsp",
            "path": "crates/kotoba-lsp/src/main.rs",
            "provides": [
               "lsp_server_binary"
            ],
            "status": "in_progress"
         },
         "kotoba_routing": {
            "build_order": 11,
            "dependencies": [
               "kotoba-workflow",
               "kotoba-ssg",
               "kotoba-cid",
               "kotoba-errors"
            ],
            "description": "Rust-native file-based routing engine.",
            "name": "kotoba_routing",
            "node_type": "http_internal",
            "path": "crates/kotoba-routing/src/lib.rs",
            "provides": [
               "HttpRoutingEngine"
            ],
            "status": "in_progress"
         },
         "kotoba_server": {
            "build_order": 12,
            "dependencies": [
               "types",
               "workflow_executor",
               "graphql_schema",
               "kotoba_routing"
            ],
            "description": "axumベースのメインHTTPサーバー",
            "name": "kotoba_server",
            "node_type": "http",
            "path": "crates/kotoba-server/src/main.rs",
            "provides": [
               "HttpServer",
               "GraphQLApi",
               "WorkflowApi"
            ],
            "status": "in_progress"
         },
         "kotoba_web": {
            "build_order": 13,
            "dependencies": [
               "kotobajs"
            ],
            "description": "Full-stack web framework using file-based routing and kotobajs.",
            "name": "kotoba_web",
            "node_type": "typescript_framework",
            "path": "packages/web",
            "provides": [
               "WebAppServer",
               "FileBasedRouter"
            ],
            "status": "in_progress"
         },
         "kotobajs": {
            "build_order": 13,
            "dependencies": [
               "schema_registry",
               "kotoba_server"
            ],
            "description": "External TypeScript SDK for querying the Kotoba API.",
            "name": "kotobajs",
            "node_type": "typescript_sdk",
            "path": "packages/kotobajs",
            "provides": [
               "KotobaClient",
               "k_validator"
            ],
            "status": "in_progress"
         },
         "kotobanet_config": {
            "build_order": 8,
            "dependencies": [
               "kotobanet_error",
               "jsonnet_core"
            ],
            "description": "General configuration management",
            "name": "kotobanet_config",
            "node_type": "kotobanet",
            "path": "crates/kotoba-kotobas/src/config.rs",
            "provides": [
               "ConfigParser",
               "AppConfig",
               "DatabaseConfig",
               "CacheConfig"
            ],
            "status": "planned"
         },
         "kotobanet_core": {
            "build_order": 9,
            "dependencies": [
               "kotobanet_error",
               "kotobanet_http_parser",
               "kotobanet_frontend",
               "kotobanet_deploy",
               "kotobanet_config",
               "jsonnet_core"
            ],
            "description": "Kotoba Kotobanet コアAPI - evaluate_kotoba(), HTTP/Frontend/Deploy/Config パーサー統合",
            "name": "kotobanet_core",
            "node_type": "kotobanet",
            "path": "crates/kotoba-kotobas/src/lib.rs",
            "provides": [
               "evaluate_kotoba",
               "evaluate_kotoba_to_json",
               "evaluate_kotoba_to_yaml",
               "HttpParser",
               "FrontendParser",
               "DeployParser",
               "ConfigParser"
            ],
            "status": "planned"
         },
         "kotobanet_deploy": {
            "build_order": 8,
            "dependencies": [
               "kotobanet_error",
               "jsonnet_core"
            ],
            "description": "Deploy Configuration for deployment settings",
            "name": "kotobanet_deploy",
            "node_type": "kotobanet",
            "path": "crates/kotoba-kotobas/src/deploy.rs",
            "provides": [
               "DeployParser",
               "DeployConfig",
               "ScalingConfig",
               "RegionConfig"
            ],
            "status": "planned"
         },
         "kotobanet_error": {
            "build_order": 7,
            "dependencies": [ ],
            "description": "Kotoba Kotobanet エラー定義",
            "name": "kotobanet_error",
            "node_type": "kotobanet",
            "path": "crates/kotoba-kotobas/src/error.rs",
            "provides": [
               "KotobaNetError",
               "Result<T>"
            ],
            "status": "planned"
         },
         "kotobanet_frontend": {
            "build_order": 8,
            "dependencies": [
               "kotobanet_error",
               "jsonnet_core"
            ],
            "description": "Frontend Framework for React component definitions",
            "name": "kotobanet_frontend",
            "node_type": "kotobanet",
            "path": "crates/kotoba-kotobas/src/frontend.rs",
            "provides": [
               "FrontendParser",
               "ComponentDef",
               "PageDef",
               "ApiRouteDef",
               "FrontendConfig"
            ],
            "status": "planned"
         },
         "kotobanet_http_parser": {
            "build_order": 8,
            "dependencies": [
               "kotobanet_error",
               "jsonnet_core"
            ],
            "description": "HTTP Parser for .kotoba.json configuration files",
            "name": "kotobanet_http_parser",
            "node_type": "kotobanet",
            "path": "crates/kotoba-kotobas/src/http_parser.rs",
            "provides": [
               "HttpParser",
               "HttpRouteConfig",
               "HttpConfig"
            ],
            "status": "planned"
         },
         "kotobas_parser": {
            "build_order": 1,
            "dependencies": [
               "kotobanet_core",
               "jsonnet_core"
            ],
            "description": "Kotoba language parser",
            "name": "kotobas_parser",
            "node_type": "kotobas",
            "path": "crates/kotobas/src/parser.rs",
            "provides": [
               "KotobaParser"
            ],
            "status": "planned"
         },
         "kubernetes_deployment": {
            "build_order": 2,
            "dependencies": [
               "docker_infrastructure"
            ],
            "description": "Kubernetesデプロイメント設定 - クラウドネイティブデプロイメント",
            "name": "kubernetes_deployment",
            "node_type": "infrastructure",
            "path": "k8s/",
            "provides": [
               "K8sManifests",
               "ServiceMesh",
               "AutoScaling",
               "IngressConfig"
            ],
            "status": "completed"
         },
         "kubernetes_operator": {
            "build_order": 11,
            "dependencies": [
               "types",
               "ir_workflow",
               "workflow_executor",
               "workflow_store"
            ],
            "description": "Kubernetes operator for workflow management",
            "name": "kubernetes_operator",
            "node_type": "ecosystem",
            "path": "crates/kotoba-workflow-operator/src/lib.rs",
            "provides": [
               "WorkflowOperator",
               "WorkflowController",
               "WorkflowReconciler"
            ],
            "status": "planned"
         },
         "lib": {
            "build_order": 11,
            "dependencies": [
               "types",
               "ir_catalog",
               "ir_rule",
               "ir_query",
               "ir_patch",
               "ir_strategy",
               "graph_core",
               "storage_mvcc",
               "storage_merkle",
               "storage_lsm",
               "storage_object",
               "security_core",
               "planner_logical",
               "planner_physical",
               "planner_optimizer",
               "execution_parser",
               "execution_engine",
               "rewrite_matcher",
               "rewrite_applier",
               "rewrite_engine",
               "kotoba_server"
            ],
            "description": "メインライブラリインターフェース",
            "name": "lib",
            "node_type": "library",
            "path": "src/lib.rs",
            "provides": [
               "kotoba"
            ],
            "status": "planned"
         },
         "license_documentation": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "ライセンスドキュメント - 法的権利と使用条件",
            "name": "license_documentation",
            "node_type": "legal",
            "path": "LICENSE",
            "provides": [
               "LegalFramework",
               "UsageRights",
               "DistributionTerms"
            ],
            "status": "completed"
         },
         "load_testing": {
            "build_order": 12,
            "dependencies": [
               "db",
               "db_cluster",
               "benchmarking_suite"
            ],
            "description": "Load testing and stress testing framework.",
            "name": "load_testing",
            "node_type": "testing",
            "path": "tests/load/",
            "provides": [
               "LoadTestRunner",
               "StressTester",
               "ConcurrencyTester",
               "ScalabilityTester"
            ],
            "status": "completed"
         },
         "machine_learning_integration": {
            "build_order": 19,
            "dependencies": [
               "db",
               "multi_model_support"
            ],
            "description": "Machine learning and AI integration capabilities.",
            "name": "machine_learning_integration",
            "node_type": "advanced",
            "path": "crates/kotoba-ml/",
            "provides": [
               "MLPipeline",
               "FeatureStore",
               "ModelRegistry",
               "PredictionAPI"
            ],
            "status": "planned"
         },
         "main_readme": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "メインREADME - プロジェクト概要と使用方法",
            "name": "main_readme",
            "node_type": "documentation",
            "path": "README.md",
            "provides": [
               "ProjectOverview",
               "UsageGuide",
               "GettingStarted"
            ],
            "status": "completed"
         },
         "markdown_parser": {
            "build_order": 15,
            "dependencies": [
               "types",
               "jsonnet_core"
            ],
            "description": "Markdownパーサー - MarkdownファイルをHTMLに変換",
            "name": "markdown_parser",
            "node_type": "ssg",
            "path": "crates/kotoba-ssg/src/markdown/parser.rs",
            "provides": [
               "MarkdownParser",
               "HtmlRenderer",
               "CodeHighlighter",
               "TableRenderer"
            ],
            "status": "planned"
         },
         "memory_optimization": {
            "build_order": 11,
            "dependencies": [
               "db",
               "profiling_tools"
            ],
            "description": "Advanced memory management and optimization features.",
            "name": "memory_optimization",
            "node_type": "performance",
            "path": "crates/kotoba-memory/",
            "provides": [
               "MemoryPool",
               "CacheManager",
               "MemoryProfiler",
               "GCOptimizer"
            ],
            "status": "completed"
         },
         "monitoring_metrics": {
            "build_order": 9,
            "dependencies": [
               "db",
               "db_cluster"
            ],
            "description": "Comprehensive monitoring and metrics collection system.",
            "name": "monitoring_metrics",
            "node_type": "operational",
            "path": "crates/kotoba-monitoring/",
            "provides": [
               "MetricsCollector",
               "HealthChecker",
               "PerformanceMonitor",
               "PrometheusExporter"
            ],
            "status": "completed"
         },
         "multi_model_support": {
            "build_order": 18,
            "dependencies": [
               "db",
               "db_cluster"
            ],
            "description": "Multi-model database support (documents, time-series, key-value).",
            "name": "multi_model_support",
            "node_type": "advanced",
            "path": "crates/kotoba-multi-model/",
            "provides": [
               "DocumentStore",
               "TimeSeriesDB",
               "KeyValueStore",
               "UnifiedAPI"
            ],
            "status": "planned"
         },
         "network_protocol": {
            "build_order": 9,
            "dependencies": [
               "types",
               "distributed_engine"
            ],
            "description": "ネットワーク通信プロトコル - 分散実行のための通信層",
            "name": "network_protocol",
            "node_type": "network",
            "path": "crates/kotoba-network/src/lib.rs",
            "provides": [
               "NetworkMessage",
               "NetworkManager",
               "MessageHandler",
               "TcpConnectionManager"
            ],
            "status": "planned"
         },
         "nix_environment": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "Nix環境設定 - 再現可能な開発環境とビルド",
            "name": "nix_environment",
            "node_type": "infrastructure",
            "path": ".devcontainer/flake.nix",
            "provides": [
               "DevEnvironment",
               "BuildReproducibility",
               "DependencyManagement"
            ],
            "status": "completed"
         },
         "nix_environment_config": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "Nix環境設定ファイル - 開発環境とビルド環境の管理",
            "name": "nix_environment_config",
            "node_type": "infrastructure",
            "path": ".devcontainer/flake.nix",
            "provides": [
               "DevEnvironment",
               "BuildEnvironment",
               "DependencyManagement"
            ],
            "status": "completed"
         },
         "nix_lock_file": {
            "build_order": 1,
            "dependencies": [
               "nix_environment_config"
            ],
            "description": "Nixロックファイル - 依存関係の正確なバージョン固定",
            "name": "nix_lock_file",
            "node_type": "infrastructure",
            "path": ".devcontainer/flake.lock",
            "provides": [
               "DependencyLocking",
               "ReproducibleBuilds",
               "VersionStability"
            ],
            "status": "completed"
         },
         "open_source_release": {
            "build_order": 17,
            "dependencies": [
               "sample_applications",
               "contribution_guidelines",
               "deployment_guides"
            ],
            "description": "Open source release preparation and community management.",
            "name": "open_source_release",
            "node_type": "community",
            "path": "RELEASE.md",
            "provides": [
               "GitHubRelease",
               "CommunityManagement",
               "MarketingMaterials",
               "RoadmapPlanning"
            ],
            "status": "completed"
         },
         "package_distribution": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "パッケージ配布設定 - Homebrew, システムパッケージ",
            "name": "package_distribution",
            "node_type": "distribution",
            "path": "Formula/",
            "provides": [
               "HomebrewFormula",
               "SystemPackages",
               "InstallationTools"
            ],
            "status": "completed"
         },
         "package_manager": {
            "build_order": 4,
            "dependencies": [
               "types",
               "cid_system"
            ],
            "description": "npm/deno like package manager with merkledag + cid",
            "name": "package_manager",
            "node_type": "package_manager",
            "path": "crates/kotoba-package-manager/src/lib.rs",
            "provides": [
               "PackageManager",
               "PackageResolver",
               "PackageInstaller"
            ],
            "status": "in_progress"
         },
         "planner_logical": {
            "build_order": 5,
            "dependencies": [
               "types",
               "ir_query",
               "ir_catalog",
               "graph_core"
            ],
            "description": "論理プランナー (GQL → 論理プラン)",
            "name": "planner_logical",
            "node_type": "planner",
            "path": "src/planner/logical.rs",
            "provides": [
               "LogicalPlanner",
               "CostEstimator"
            ],
            "status": "planned"
         },
         "planner_optimizer": {
            "build_order": 6,
            "dependencies": [
               "types",
               "ir_query",
               "ir_catalog",
               "graph_core",
               "planner_logical",
               "planner_physical"
            ],
            "description": "クエリ最適化器 (述語押下げ, 結合順序DP, インデックス選択)",
            "name": "planner_optimizer",
            "node_type": "planner",
            "path": "src/planner/optimizer.rs",
            "provides": [
               "QueryOptimizer",
               "OptimizationRule"
            ],
            "status": "planned"
         },
         "planner_physical": {
            "build_order": 5,
            "dependencies": [
               "types",
               "ir_query",
               "ir_catalog",
               "graph_core"
            ],
            "description": "物理プランナー (論理プラン → 物理プラン)",
            "name": "planner_physical",
            "node_type": "planner",
            "path": "src/planner/physical.rs",
            "provides": [
               "PhysicalPlanner",
               "PhysicalPlan",
               "PhysicalOp"
            ],
            "status": "planned"
         },
         "profiling_tools": {
            "build_order": 10,
            "dependencies": [
               "db",
               "benchmarking_suite"
            ],
            "description": "Performance profiling and optimization tools.",
            "name": "profiling_tools",
            "node_type": "performance",
            "path": "crates/kotoba-profiler/",
            "provides": [
               "Profiler",
               "MemoryAnalyzer",
               "QueryOptimizer",
               "PerformanceAdvisor"
            ],
            "status": "completed"
         },
         "project_documentation": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "プロジェクトドキュメント - Markdown形式のドキュメントコンテンツ",
            "name": "project_documentation",
            "node_type": "documentation",
            "path": "docs/",
            "provides": [
               "DocumentationContent",
               "TutorialContent",
               "APIDocs",
               "DeploymentDocs",
               "ArchitectureDocs"
            ],
            "status": "completed"
         },
         "project_schema": {
            "build_order": 2,
            "dependencies": [
               "data_schemas"
            ],
            "description": "プロジェクトスキーマ定義 - KotobaプロジェクトのJSON Schema",
            "name": "project_schema",
            "node_type": "schema",
            "path": "schemas/kotoba.schema.json",
            "provides": [
               "ProjectSchema",
               "ValidationRules",
               "TypeDefinitions"
            ],
            "status": "completed"
         },
         "publishing_guide": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "公開ガイド - リリースと公開の手順",
            "name": "publishing_guide",
            "node_type": "documentation",
            "path": "PUBLISH_GUIDE.md",
            "provides": [
               "ReleaseProcess",
               "PublishingWorkflow",
               "DistributionGuide"
            ],
            "status": "completed"
         },
         "release_artifacts": {
            "build_order": 25,
            "dependencies": [
               "rust_project_config"
            ],
            "description": "リリースアーティファクト - 配布用パッケージファイル",
            "name": "release_artifacts",
            "node_type": "release",
            "path": "artifacts/",
            "provides": [
               "DistributionPackages",
               "InstallationArchives",
               "ReleaseBundles"
            ],
            "status": "completed"
         },
         "release_notes": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "リリースノート - バージョン履歴と変更点",
            "name": "release_notes",
            "node_type": "documentation",
            "path": "RELEASE.md",
            "provides": [
               "VersionHistory",
               "Changelog",
               "ReleaseInformation"
            ],
            "status": "completed"
         },
         "repl_tests": {
            "build_order": 25,
            "dependencies": [
               "types"
            ],
            "description": "REPL機能テスト - インタラクティブシェルのテスト",
            "name": "repl_tests",
            "node_type": "test",
            "path": "tests/repl/",
            "provides": [
               "ReplTestSuite",
               "InteractiveTests",
               "CommandTests"
            ],
            "status": "completed"
         },
         "research_documentation": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "研究ドキュメント - 論文、研究ノート、技術調査",
            "name": "research_documentation",
            "node_type": "research",
            "path": "research/",
            "provides": [
               "ResearchPapers",
               "TechnicalReports",
               "InvestigationResults"
            ],
            "status": "completed"
         },
         "rewrite_applier": {
            "build_order": 5,
            "dependencies": [
               "types",
               "ir_rule",
               "ir_patch",
               "graph_core"
            ],
            "description": "ルール適用 (パッチ生成)",
            "name": "rewrite_applier",
            "node_type": "rewrite",
            "path": "crates/kotoba-rewrite/src/rewrite/applier.rs",
            "provides": [
               "RuleApplier"
            ],
            "status": "planned"
         },
         "rewrite_engine": {
            "build_order": 6,
            "dependencies": [
               "types",
               "ir_rule",
               "ir_strategy",
               "graph_core",
               "storage_mvcc",
               "storage_merkle",
               "rewrite_matcher",
               "rewrite_applier"
            ],
            "description": "DPO書換えエンジン (マッチング + 適用 + 戦略実行)",
            "name": "rewrite_engine",
            "node_type": "rewrite",
            "path": "crates/kotoba-rewrite/src/rewrite/engine.rs",
            "provides": [
               "RewriteEngine",
               "RewriteExterns"
            ],
            "status": "planned"
         },
         "rewrite_matcher": {
            "build_order": 5,
            "dependencies": [
               "types",
               "ir_rule",
               "ir_catalog",
               "graph_core"
            ],
            "description": "ルールマッチング (LHS + NACチェック)",
            "name": "rewrite_matcher",
            "node_type": "rewrite",
            "path": "crates/kotoba-rewrite/src/rewrite/matcher.rs",
            "provides": [
               "RuleMatcher"
            ],
            "status": "planned"
         },
         "roadmap_documentation": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "ロードマップドキュメント - 次期機能と開発計画",
            "name": "roadmap_documentation",
            "node_type": "documentation",
            "path": "docs/next_functions.md",
            "provides": [
               "FeatureRoadmap",
               "DevelopmentPlan",
               "FutureCapabilities"
            ],
            "status": "completed"
         },
         "rust_project_config": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "Rustプロジェクト設定 - 依存関係、ビルド設定、メタデータ",
            "name": "rust_project_config",
            "node_type": "configuration",
            "path": "Cargo.toml",
            "provides": [
               "ProjectMetadata",
               "DependencyManagement",
               "BuildConfiguration"
            ],
            "status": "completed"
         },
         "sample_applications": {
            "build_order": 16,
            "dependencies": [
               "db",
               "db_cluster",
               "tutorials"
            ],
            "description": "Sample applications and use case demonstrations.",
            "name": "sample_applications",
            "node_type": "community",
            "path": "examples/",
            "provides": [
               "WebAppDemo",
               "AnalyticsApp",
               "IoTApplication",
               "SocialNetworkDemo"
            ],
            "status": "completed"
         },
         "schema_registry": {
            "build_order": 999,
            "dependencies": [
               "schema_validator"
            ],
            "description": "Schema registration and evolution engine",
            "name": "schema_registry",
            "node_type": "registry",
            "path": "crates/kotoba-schema-registry/src/lib.rs",
            "provides": [ ],
            "status": "unknown"
         },
         "schema_validator": {
            "build_order": 3,
            "dependencies": [
               "types",
               "ir_catalog"
            ],
            "description": "Graph schema validation engine",
            "name": "schema_validator",
            "node_type": "schema",
            "path": "crates/kotoba-schema/src/validator.rs",
            "provides": [
               "SchemaValidator",
               "ValidationResult"
            ],
            "status": "published"
         },
         "security_capabilities": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "Deno風capabilityベースセキュリティシステム",
            "name": "security_capabilities",
            "node_type": "security",
            "path": "crates/kotoba-security/src/capabilities.rs",
            "provides": [
               "Capability",
               "CapabilitySet",
               "CapabilityService",
               "ResourceType",
               "Action"
            ],
            "status": "planned"
         },
         "security_capabilities_documentation": {
            "build_order": 1,
            "dependencies": [
               "security_capabilities"
            ],
            "description": "機能ベースセキュリティドキュメント - Denoに似たセキュリティシステム",
            "name": "security_capabilities_documentation",
            "node_type": "documentation",
            "path": "docs/security/CAPABILITIES_README.md",
            "provides": [
               "SecurityDocumentation",
               "CapabilityExamples",
               "SecurityGuide"
            ],
            "status": "completed"
         },
         "security_core": {
            "build_order": 6,
            "dependencies": [
               "types",
               "security_jwt",
               "security_oauth2",
               "security_mfa",
               "security_password",
               "security_session",
               "security_capabilities"
            ],
            "description": "セキュリティ統合サービス",
            "name": "security_core",
            "node_type": "security",
            "path": "crates/kotoba-security/src/lib.rs",
            "provides": [
               "SecurityService",
               "SecurityError"
            ],
            "status": "planned"
         },
         "security_jwt": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "JWTトークンの生成・検証機能",
            "name": "security_jwt",
            "node_type": "security",
            "path": "crates/kotoba-security/src/jwt.rs",
            "provides": [
               "JwtService",
               "JwtClaims",
               "TokenPair"
            ],
            "status": "planned"
         },
         "security_mfa": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "多要素認証 (TOTP) 機能",
            "name": "security_mfa",
            "node_type": "security",
            "path": "crates/kotoba-security/src/mfa.rs",
            "provides": [
               "MfaService",
               "MfaSecret",
               "MfaCode"
            ],
            "status": "planned"
         },
         "security_oauth2": {
            "build_order": 5,
            "dependencies": [
               "types",
               "security_jwt"
            ],
            "description": "OAuth2/OpenID Connect統合",
            "name": "security_oauth2",
            "node_type": "security",
            "path": "crates/kotoba-security/src/oauth2.rs",
            "provides": [
               "OAuth2Service",
               "OAuth2Provider",
               "OAuth2Config"
            ],
            "status": "planned"
         },
         "security_password": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "パスワードハッシュ化・検証機能",
            "name": "security_password",
            "node_type": "security",
            "path": "crates/kotoba-security/src/password.rs",
            "provides": [
               "PasswordService",
               "PasswordHash"
            ],
            "status": "planned"
         },
         "security_session": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "セッション管理機能",
            "name": "security_session",
            "node_type": "security",
            "path": "crates/kotoba-security/src/session.rs",
            "provides": [
               "SessionManager",
               "SessionData"
            ],
            "status": "planned"
         },
         "seo_configuration": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "SEO設定 - 検索エンジン最適化とクローラー制御",
            "name": "seo_configuration",
            "node_type": "seo",
            "path": "robots.txt",
            "provides": [
               "SearchOptimization",
               "CrawlerControl",
               "SiteIndexing"
            ],
            "status": "completed"
         },
         "serverless_deployment": {
            "build_order": 22,
            "dependencies": [
               "cloud_integrations_alt",
               "monitoring_metrics"
            ],
            "description": "Serverless deployment and scaling capabilities.",
            "name": "serverless_deployment",
            "node_type": "cloud",
            "path": "crates/kotoba-serverless/",
            "provides": [
               "LambdaDeployment",
               "CloudRun",
               "KubernetesOperator",
               "AutoScaling"
            ],
            "status": "planned"
         },
         "shell_nix_fallback": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "Shell.nixフォールバック - flakeをサポートしないシステム用の開発環境",
            "name": "shell_nix_fallback",
            "node_type": "infrastructure",
            "path": ".devcontainer/shell.nix",
            "provides": [
               "FallbackDevEnvironment",
               "LegacyNixSupport"
            ],
            "status": "completed"
         },
         "site_build_output": {
            "build_order": 20,
            "dependencies": [
               "static_site_generator",
               "documentation_builder",
               "ssg_assets"
            ],
            "description": "サイトビルド出力 - 生成された静的サイトファイル",
            "name": "site_build_output",
            "node_type": "build_output",
            "path": "build/site/",
            "provides": [
               "StaticSiteOutput",
               "GeneratedHTML",
               "SiteAssets",
               "DocumentationSite"
            ],
            "status": "completed"
         },
         "site_index_html": {
            "build_order": 21,
            "dependencies": [
               "site_build_output"
            ],
            "description": "サイトメインインデックスHTML - サイトのメインページ",
            "name": "site_index_html",
            "node_type": "site_content",
            "path": "build/site/index.html",
            "provides": [
               "MainIndexPage",
               "SiteEntryPoint"
            ],
            "status": "completed"
         },
         "ssg_assets": {
            "build_order": 15,
            "dependencies": [ ],
            "description": "SSGアセット - CSS, JavaScript, テンプレートファイル",
            "name": "ssg_assets",
            "node_type": "ssg_assets",
            "path": "crates/kotoba-ssg/src/assets/",
            "provides": [
               "CSSAssets",
               "JSAssets",
               "HTMLTemplates",
               "StaticAssets"
            ],
            "status": "completed"
         },
         "ssg_examples": {
            "build_order": 15,
            "dependencies": [ ],
            "description": "SSGサンプル - Kotoba言語のサイト定義ファイル",
            "name": "ssg_examples",
            "node_type": "ssg_examples",
            "path": "crates/kotoba-ssg/src/examples/",
            "provides": [
               "KotobaSiteDefinitions",
               "SiteTemplates",
               "ExampleSites"
            ],
            "status": "completed"
         },
         "state_graph_lib": {
            "build_order": 7,
            "dependencies": [
               "types",
               "rewrite_engine",
               "execution_engine"
            ],
            "description": "UI state management library providing schema, rules, and a .kotobas accessor library.",
            "name": "state_graph_lib",
            "node_type": "ui_library",
            "path": "crates/kotoba-state-graph/src/lib.rs",
            "provides": [
               "UiVertexType",
               "UiEdgeLabel",
               "UiPropKey",
               "get_standard_ui_rules",
               "state.kotoba"
            ],
            "status": "planned"
         },
         "static_site_generator": {
            "build_order": 17,
            "dependencies": [
               "types",
               "jsonnet_core",
               "markdown_parser",
               "html_template_engine",
               "http_ir"
            ],
            "description": "静的サイトジェネレーター - 完全Kotoba言語実装のSSG",
            "name": "static_site_generator",
            "node_type": "ssg",
            "path": "crates/kotoba-ssg/src/generator.rs",
            "provides": [
               "SiteGenerator",
               "PageBuilder",
               "SitemapGenerator",
               "FeedGenerator"
            ],
            "status": "planned"
         },
         "storage_lsm": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "RocksDB-based high-performance storage (95% test coverage)",
            "name": "storage_lsm",
            "node_type": "storage",
            "path": "crates/kotoba-storage/src/storage/lsm.rs",
            "provides": [
               "LSMTree",
               "RocksDB"
            ],
            "status": "published"
         },
         "storage_main": {
            "build_order": 5,
            "dependencies": [
               "types",
               "errors",
               "graph",
               "cid"
            ],
            "description": "Main storage crate providing unified backend interface for KotobaDB",
            "name": "storage_main",
            "node_type": "storage_api",
            "path": "crates/kotoba-storage/",
            "provides": [
               "StorageBackend",
               "StorageBackendFactory",
               "KotobaDBBackend"
            ],
            "status": "in_progress"
         },
         "storage_merkle": {
            "build_order": 4,
            "dependencies": [
               "types",
               "graph_core"
            ],
            "description": "Merkle DAG永続化",
            "name": "storage_merkle",
            "node_type": "storage",
            "path": "crates/kotoba-storage/src/storage/merkle.rs",
            "provides": [
               "MerkleDAG",
               "MerkleNode",
               "GraphVersion"
            ],
            "status": "planned"
         },
         "storage_mvcc": {
            "build_order": 4,
            "dependencies": [
               "types",
               "graph_core"
            ],
            "description": "MVCCマネージャー",
            "name": "storage_mvcc",
            "node_type": "storage",
            "path": "crates/kotoba-storage/src/storage/mvcc.rs",
            "provides": [
               "MVCCManager",
               "Transaction",
               "TxState"
            ],
            "status": "planned"
         },
         "storage_object": {
            "build_order": 4,
            "dependencies": [
               "types"
            ],
            "description": "Object storage backend (AWS S3, GCP Cloud Storage, Azure Blob Storage)",
            "name": "storage_object",
            "node_type": "storage",
            "path": "crates/kotoba-storage/src/storage/object.rs",
            "provides": [
               "ObjectStorageBackend",
               "ObjectStorageProvider"
            ],
            "status": "planned"
         },
         "streaming_processing": {
            "build_order": 20,
            "dependencies": [
               "db_cluster",
               "multi_model_support"
            ],
            "description": "Real-time streaming data processing and analytics.",
            "name": "streaming_processing",
            "node_type": "advanced",
            "path": "crates/kotoba-streaming/",
            "provides": [
               "StreamProcessor",
               "RealTimeAnalytics",
               "EventProcessing",
               "CDC"
            ],
            "status": "planned"
         },
         "topology_data": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "トポロジーデータ - プロセスネットワークグラフの構造データ",
            "name": "topology_data",
            "node_type": "topology",
            "path": "topology/topology_data.json",
            "provides": [
               "TopologyGraph",
               "ProcessNetwork",
               "DependencyGraph"
            ],
            "status": "completed"
         },
         "topology_validator": {
            "build_order": 2,
            "dependencies": [
               "topology_data"
            ],
            "description": "トポロジー検証スクリプト - dag.jsonnetの整合性検証",
            "name": "topology_validator",
            "node_type": "validation",
            "path": "scripts/validate_topology.jsonnet",
            "provides": [
               "TopologyValidation",
               "ConsistencyCheck",
               "IntegrityVerification"
            ],
            "status": "completed"
         },
         "tutorials": {
            "build_order": 15,
            "dependencies": [
               "api_reference",
               "deployment_guides"
            ],
            "description": "Step-by-step tutorials and learning resources.",
            "name": "tutorials",
            "node_type": "documentation",
            "path": "docs/tutorials/",
            "provides": [
               "TutorialSeries",
               "QuickStartGuide",
               "AdvancedExamples",
               "VideoTutorials"
            ],
            "status": "completed"
         },
         "types": {
            "build_order": 1,
            "dependencies": [ ],
            "description": "共通型定義 (Value, VertexId, EdgeId, GraphRef, etc.)",
            "name": "types",
            "node_type": "foundation",
            "path": "crates/kotoba-core/src/types.rs",
            "provides": [
               "Value",
               "VertexId",
               "EdgeId",
               "GraphRef",
               "TxId",
               "ContentHash"
            ],
            "status": "published"
         },
         "types_codegen": {
            "build_order": 3,
            "dependencies": [
               "types"
            ],
            "description": "型変換データ - Jsonnet DSLから生成された型定義",
            "name": "types_codegen",
            "node_type": "codegen",
            "path": "src/codegen/types_converted.json",
            "provides": [
               "TypeConversion",
               "CodeGeneration",
               "TypeMapping"
            ],
            "status": "completed"
         },
         "workflow_designer": {
            "build_order": 9,
            "dependencies": [
               "types"
            ],
            "description": "Visual workflow designer UI with React/TypeScript",
            "name": "workflow_designer",
            "node_type": "ecosystem",
            "path": "packages/kotoba-workflow-designer/src/index.tsx",
            "provides": [
               "WorkflowDesigner",
               "ActivityPalette",
               "PropertyPanel",
               "WorkflowCanvas"
            ],
            "status": "planned"
         },
         "workflow_executor": {
            "build_order": 8,
            "dependencies": [
               "types",
               "ir_workflow",
               "graph_core",
               "storage_mvcc",
               "storage_merkle",
               "execution_engine"
            ],
            "description": "Temporalベースワークフロー実行器 (MVCC + Event Sourcing)",
            "name": "workflow_executor",
            "node_type": "workflow",
            "path": "crates/kotoba-workflow/src/executor.rs",
            "provides": [
               "WorkflowExecutor",
               "ActivityExecutor",
               "SagaExecutor",
               "WorkflowStateManager",
               "EventSourcingManager"
            ],
            "status": "planned"
         },
         "workflow_store": {
            "build_order": 7,
            "dependencies": [
               "types",
               "ir_workflow",
               "storage_mvcc",
               "storage_merkle"
            ],
            "description": "ワークフロー状態永続化 (MVCC + Event Sourcing + Snapshots)",
            "name": "workflow_store",
            "node_type": "workflow",
            "path": "crates/kotoba-workflow/src/store.rs",
            "provides": [
               "WorkflowStore",
               "WorkflowStateManager",
               "EventStore",
               "SnapshotManager",
               "EventSourcingManager"
            ],
            "status": "planned"
         }
      },
      "reverse_topological_order": [
         "site_index_html",
         "site_build_output",
         "documentation_builder",
         "github_pages_deployer",
         "static_site_generator",
         "html_template_engine",
         "markdown_parser",
         "ssg_examples",
         "project_documentation",
         "ssg_assets",
         "cluster_tests",
         "general_tests",
         "repl_tests",
         "google_integration",
         "shell_nix_fallback",
         "nix_lock_file",
         "nix_environment_config",
         "graph_code_generation",
         "compatibility_analysis",
         "google_stdlib_tests",
         "google_stdlib_implementation",
         "security_capabilities_documentation",
         "arxiv_submission",
         "release_artifacts",
         "compatibility_reports",
         "code_coverage_data",
         "github_pages_domain",
         "seo_configuration",
         "compiled_binaries",
         "jsonnet_stdlib_ext",
         "release_notes",
         "contribution_guide",
         "main_readme",
         "license_documentation",
         "rust_project_config",
         "roadmap_documentation",
         "capabilities_documentation",
         "publishing_guide",
         "design_documentation",
         "research_documentation",
         "topology_validator",
         "types_codegen",
         "topology_data",
         "project_schema",
         "data_schemas",
         "build_scripts",
         "package_distribution",
         "nix_environment",
         "kubernetes_deployment",
         "docker_infrastructure",
         "db",
         "db_engine_memory",
         "db_core",
         "ai_examples",
         "ai_chains",
         "ai_memory",
         "ai_tools",
         "ai_models",
         "ai_runtime",
         "db_handler",
         "ai_agent_parser",
         "deploy_hosting_example",
         "deploy_hosting_manager",
         "deploy_hosting_server",
         "deploy_cli_binary",
         "deploy_scaling_core",
         "deploy_network_core",
         "deploy_controller_core",
         "deploy_cli_core",
         "docs_cli",
         "docs_core",
         "docs_server",
         "docs_search",
         "docs_template",
         "docs_generator",
         "docs_config",
         "docs_parser",
         "deploy_example_microservices",
         "deploy_example_simple",
         "example_tauri_react_app",
         "example_social_network",
         "example_http_server",
         "example_frontend_app",
         "lib",
         "project_documentation",
         "ssg_assets",
         "ssg_examples",
         "markdown_parser",
         "html_template_engine",
         "static_site_generator",
         "github_pages_deployer",
         "documentation_builder",
         "site_build_output",
         "site_index_html",
         "repl_tests",
         "general_tests",
         "cluster_tests",
         "docker_infrastructure",
         "kubernetes_deployment",
         "nix_environment",
         "package_distribution",
         "build_scripts",
         "data_schemas",
         "project_schema",
         "topology_data",
         "types_codegen",
         "topology_validator",
         "research_documentation",
         "design_documentation",
         "publishing_guide",
         "capabilities_documentation",
         "roadmap_documentation",
         "rust_project_config",
         "license_documentation",
         "main_readme",
         "contribution_guide",
         "release_notes",
         "jsonnet_stdlib_ext",
         "compiled_binaries",
         "seo_configuration",
         "github_pages_domain",
         "code_coverage_data",
         "compatibility_reports",
         "release_artifacts",
         "arxiv_submission",
         "google_integration",
         "security_capabilities_documentation",
         "google_stdlib_implementation",
         "google_stdlib_tests",
         "compatibility_analysis",
         "graph_code_generation",
         "nix_environment_config",
         "nix_lock_file",
         "shell_nix_fallback",
         "cli_interface",
         "kotoba_lsp",
         "deploy_runtime",
         "deploy_cli",
         "http_server",
         "graphql_handler",
         "graphql_schema",
         "deploy_controller",
         "frontend_framework",
         "deploy_git_integration",
         "deploy_network",
         "http_engine",
         "http_handlers",
         "deploy_scaling",
         "deploy_parser",
         "http_parser",
         "deploy_config",
         "frontend_api_ir",
         "frontend_build_ir",
         "frontend_render_ir",
         "frontend_route_ir",
         "frontend_component_ir",
         "http_ir",
         "execution_engine",
         "network_protocol",
         "distributed_engine",
         "cloud_integrations",
         "kubernetes_operator",
         "activity_libraries",
         "workflow_designer",
         "rewrite_engine",
         "planner_optimizer",
         "rewrite_applier",
         "rewrite_matcher",
         "execution_parser",
         "planner_physical",
         "planner_logical",
         "storage_lsm",
         "storage_object",
         "storage_merkle",
         "storage_mvcc",
         "graph_core",
         "ir_strategy",
         "graph_edge",
         "graph_vertex",
         "ir_patch",
         "ir_query",
         "ir_rule",
         "ir_catalog",
         "schema_validator",
         "jsonnet_core",
         "kotobanet_core",
         "kotobanet_config",
         "kotobanet_deploy",
         "kotobanet_frontend",
         "kotobanet_http_parser",
         "kotobanet_error",
         "jsonnet_stdlib",
         "jsonnet_evaluator",
         "jsonnet_parser",
         "jsonnet_lexer",
         "jsonnet_ast",
         "jsonnet_value",
         "jsonnet_error",
         "cid_system",
         "types",
         "package_manager",
         "state_graph_lib"
      ],
      "topological_order": [
         "types",
         "jsonnet_error",
         "ir_catalog",
         "ir_rule",
         "ir_query",
         "ir_patch",
         "graph_vertex",
         "graph_edge",
         "jsonnet_value",
         "cid_system",
         "schema_validator",
         "ir_strategy",
         "frontend_component_ir",
         "docs_parser",
         "docs_config",
         "jsonnet_ast",
         "jsonnet_lexer",
         "graph_core",
         "storage_main",
         "db_core",
         "db_engine_memory",
         "db_engine_lsm",
         "db_cluster",
         "backup_restore",
         "monitoring_metrics",
         "config_management",
         "benchmarking_suite",
         "profiling_tools",
         "memory_optimization",
         "integration_tests",
         "load_testing",
         "ci_cd_pipeline",
         "api_reference",
         "deployment_guides",
         "tutorials",
         "sample_applications",
         "contribution_guidelines",
         "open_source_release",
         "multi_model_support",
         "machine_learning_integration",
         "streaming_processing",
         "advanced_query_language",
         "cloud_integrations",
         "serverless_deployment",
         "package_manager",
         "storage_mvcc",
         "security_jwt",
         "security_mfa",
         "security_password",
         "security_session",
         "security_capabilities",
         "security_oauth2",
         "security_core",
         "planner_logical",
         "planner_physical",
         "execution_parser",
         "rewrite_matcher",
         "rewrite_applier",
         "planner_optimizer",
         "rewrite_engine",
         "execution_engine",
         "workflow_designer",
         "activity_libraries",
         "kubernetes_operator",
         "cloud_integrations",
         "distributed_engine",
         "network_protocol",
         "cli_interface",
         "kotoba_lsp",
         "http_ir",
         "http_parser",
         "http_handlers",
         "http_engine",
         "http_server",
         "deploy_config",
         "deploy_parser",
         "deploy_scaling",
         "deploy_network",
         "deploy_git_integration",
         "frontend_framework",
         "deploy_controller",
         "graphql_schema",
         "graphql_handler",
         "deploy_cli",
         "deploy_runtime",
         "deploy_example_simple",
         "deploy_example_microservices",
         "deploy_cli_core",
         "deploy_cli_binary",
         "deploy_controller_core",
         "deploy_network_core",
         "deploy_scaling_core",
         "deploy_cli_binary",
         "deploy_hosting_server",
         "deploy_hosting_manager",
         "deploy_hosting_example",
         "ai_agent_parser",
         "db_handler",
         "ai_runtime",
         "ai_models",
         "ai_tools",
         "ai_memory",
         "ai_chains",
         "ai_examples",
         "state_graph_lib",
         "docs_generator",
         "docs_search",
         "storage_main",
         "kotobajs",
         "kotoba_web",
         "serverless_deployment",
         "cloud_integrations",
         "advanced_query_language",
         "streaming_processing",
         "machine_learning_integration",
         "multi_model_support",
         "open_source_release",
         "contribution_guidelines",
         "sample_applications",
         "tutorials",
         "deployment_guides",
         "api_reference",
         "ci_cd_pipeline",
         "load_testing",
         "integration_tests",
         "memory_optimization",
         "profiling_tools",
         "benchmarking_suite",
         "config_management",
         "monitoring_metrics",
         "backup_restore",
         "db_cluster",
         "db_engine_lsm",
         "db_engine_memory",
         "planner_logical",
         "planner_physical",
         "jsonnet_parser",
         "frontend_route_ir",
         "frontend_render_ir",
         "frontend_build_ir",
         "frontend_api_ir",
         "docs_template",
         "db",
         "docs_server",
         "docs_core",
         "docs_cli",
         "kotoba_web",
         "kotobajs"
      ]
   },
   "validation_metadata": {
      "metadata": {
         "architecture": "Process Network Graph Model",
         "project_name": "Kotoba",
         "validation_timestamp": "2025-01-12T00:00:00Z",
         "validator_version": "1.0.0",
         "version": "0.1.0"
      },
      "statistics": {
         "edge_count": 523,
         "has_cycles": false,
         "is_valid_topology": false,
         "max_build_order": 193,
         "node_count": 193
      }
   },
   "validation_rules": {
      "build_order_integrity": {
         "description": "ビルド順序が依存関係を満たす",
         "severity": "error"
      },
      "dependency_integrity": {
         "description": "ノードの依存関係とエッジが一致する",
         "severity": "error"
      },
      "edge_integrity": {
         "description": "エッジの整合性が保たれている（重複、自己参照なし）",
         "severity": "error"
      },
      "no_cycles": {
         "description": "循環依存が存在しない",
         "severity": "error"
      },
      "node_existence": {
         "description": "すべてのエッジで参照されるノードが存在する",
         "severity": "error"
      },
      "topological_order": {
         "description": "トポロジカル順序が正しい",
         "severity": "error"
      }
   }
}
