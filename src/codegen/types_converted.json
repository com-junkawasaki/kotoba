{
  
  

  
  
  

  dsl_metadata": {
    version": "0.1.0",
    description": "Kotoba共通型定義 - Jsonnet DSL表現",
    source": "src/types.rs",
    generated": false,
    generator": "jsonnet_dsl"
  },

  
  
  

  types": {
    
    "VertexId": {
      type": "alias",
      target": "uuid",
      rust_type": "Uuid",
      description": "頂点ID",
      attributes": ["Debug", "Clone", "PartialEq", "Eq", "Hash"]
    },

    "EdgeId": {
      type": "alias",
      target": "uuid",
      rust_type": "Uuid",
      description": "エッジID",
      attributes": ["Debug", "Clone", "PartialEq", "Eq", "Hash"]
    },

    "Label": {
      type": "alias",
      target": "string",
      rust_type": "String",
      description": "ラベル（型）"
    },

    "PropertyKey": {
      type": "alias",
      target": "string",
      rust_type": "String",
      description": "プロパティキー"
    },

    
    "Value": {
      type": "enum",
      description": "プロパティ値",
      variants": [
        {
          name": "Null",
          fields": [],
          description": "Null値"
        },
        {
          name": "Bool",
          fields": [{ name": "value", type": "boolean" }],
          description": "真偽値"
        },
        {
          name": "Int",
          fields": [{ name": "value", type": "i64" }],
          description": "64ビット整数"
        },
        {
          name": "Integer",
          fields": [{ name": "value", type": "i64" }],
          description": "整数（互換性のため）"
        },
        {
          name": "String",
          fields": [{ name": "value", type": "String" }],
          description": "文字列"
        }
      ],
      attributes": ["Debug", "Clone", "Serialize", "Deserialize", "PartialEq", "Eq", "Hash"],
      derives": ["serde(untagged)"]
    },

    
    "GraphRef": {
      type": "struct",
      description": "グラフ参照（Merkleハッシュ）",
      fields": [
        {
          name": "hash",
          type": "String",
          visibility": "pub",
          description": "Merkleハッシュ値"
        }
      ],
      attributes": ["Debug", "Clone", "PartialEq", "Eq", "Hash", "Serialize", "Deserialize"],
      impls": []
    },

    "TxId": {
      type": "struct",
      description": "トランザクションID",
      fields": [
        {
          name": "id",
          type": "String",
          visibility": "pub",
          description": "トランザクションID値"
        }
      ],
      attributes": ["Debug", "Clone", "PartialEq", "Eq", "Hash", "Serialize", "Deserialize"],
      impls": []
    },

    "ContentHash": {
      type": "struct",
      description": "コンテンツハッシュ",
      fields": [
        {
          name": "hash",
          type": "String",
          visibility": "pub",
          description": "SHA256ハッシュ値"
        }
      ],
      attributes": ["Debug", "Clone", "PartialEq", "Eq", "Hash", "Serialize", "Deserialize"],
      impls": [
        {
          type": "method",
          name": "sha256",
          signature": "pub fn sha256(data": [u8; 32]) -> Self",
          body": |||
            use sha2"::{Sha256, Digest};
            let mut hasher = Sha256"::new();
            hasher.update(data);
            let result = hasher.finalize();
            Self(hex"::encode(result))
          |||,
          description": "SHA256ハッシュを計算"
        }
      ]
    },

    
    "KotobaError": {
      type": "enum",
      description": "Kotobaエラー型",
      variants": [
        {
          name": "Parse",
          fields": [{ name": "message", type": "String" }],
          description": "パースエラー",
          error_message": "Parse error": {0}"
        },
        {
          name": "Execution",
          fields": [{ name": "message", type": "String" }],
          description": "実行エラー",
          error_message": "Execution error": {0}"
        },
        {
          name": "Storage",
          fields": [{ name": "message", type": "String" }],
          description": "ストレージエラー",
          error_message": "Storage error": {0}"
        },
        {
          name": "Validation",
          fields": [{ name": "message", type": "String" }],
          description": "検証エラー",
          error_message": "Validation error": {0}"
        },
        {
          name": "Rewrite",
          fields": [{ name": "message", type": "String" }],
          description": "書き換えエラー",
          error_message": "Rewrite error": {0}"
        },
        {
          name": "Io",
          fields": [{ name": "error", type": "std"::io"::Error" }],
          description": "IOエラー",
          error_message": "IO error": {0}",
          from": "std"::io"::Error"
        },
        {
          name": "IoError",
          fields": [{ name": "message", type": "String" }],
          description": "IOエラー（文字列）",
          error_message": "IO error": {0}"
        },
        {
          name": "InvalidArgument",
          fields": [{ name": "message", type": "String" }],
          description": "無効な引数",
          error_message": "Invalid argument": {0}"
        },
        {
          name": "NotFound",
          fields": [{ name": "message", type": "String" }],
          description": "見つからない",
          error_message": "Not found": {0}"
        }
      ],
      attributes": ["Debug", "thiserror"::Error"],
      derives": []
    },

    
    "Properties": {
      type": "alias",
      target": "HashMap<PropertyKey, Value>",
      rust_type": "HashMap<String, Value>",
      description": "プロパティの集合"
    },

    "Result<T>": {
      type": "alias",
      target": "std"::result"::Result<T, KotobaError>",
      rust_type": "std"::result"::Result<T, KotobaError>",
      description": "Result型エイリアス"
    }
  },

  
  
  

  dependencies": {
    external": [
      "serde"::{Deserialize, Serialize}",
      "std"::collections"::HashMap",
      "uuid"::Uuid",
      "sha2"::{Sha256, Digest}",
      "thiserror"::Error",
      "hex"
    ],

    internal": []
  },

  
  
  

  codegen": {
    target": "rust",
    output_file": "src/types.rs",
    template": "rust_type_template",

    options": {
      derive_serde": true,
      derive_debug": true,
      generate_docs": true,
      include_tests": false
    }
  }

  
  
  

}
