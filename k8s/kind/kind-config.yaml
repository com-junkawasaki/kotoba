kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
# Kind cluster configuration for Kotoba local development

nodes:
  # Control plane node
  - role: control-plane
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
    extraPortMappings:
      # Map host port 80 to container port 80 for ingress
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      # Map host port 443 to container port 443 for ingress
      - containerPort: 443
        hostPort: 443
        protocol: TCP
      # Map host port 3000 for direct access to Kotoba
      - containerPort: 30000
        hostPort: 3000
        protocol: TCP
      # Map host port 8080 for gRPC access
      - containerPort: 30001
        hostPort: 8080
        protocol: TCP

  # Worker nodes for distributed storage
  - role: worker
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "storage=enabled"
    extraPortMappings:
      - containerPort: 30002
        hostPort: 3001
        protocol: TCP
      - containerPort: 30003
        hostPort: 8081
        protocol: TCP

  - role: worker
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "storage=enabled"
    extraPortMappings:
      - containerPort: 30004
        hostPort: 3002
        protocol: TCP
      - containerPort: 30005
        hostPort: 8082
        protocol: TCP

  - role: worker
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "storage=enabled"
    extraPortMappings:
      - containerPort: 30006
        hostPort: 3003
        protocol: TCP
      - containerPort: 30007
        hostPort: 8083
        protocol: TCP

# Feature gates for local development
featureGates:
  EphemeralContainers: true

# Networking configuration
networking:
  # Disable default CNI and use kindnet for simpler networking
  disableDefaultCNI: false
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"

# Container runtime configuration
containerdConfigPatches:
  - |-
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5000"]
      endpoint = ["http://kind-registry:5000"]
  - |-
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."gcr.io"]
      endpoint = ["https://gcr.io"]
  - |-
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
      endpoint = ["https://registry-1.docker.io"]
