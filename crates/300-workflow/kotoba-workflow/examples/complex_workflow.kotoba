{
  // ==========================================
  // Complex Workflow with Decision & Parallel
  // ==========================================
  // Advanced example with conditional logic and parallel execution

  workflow: {
    id: "document_processing",
    name: "Document Processing Pipeline",
    description: "Complex document processing with approval workflows",
    version: "1.0.0",

    inputs: [
      { name: "documentId", type: "string", required: true },
      { name: "documentType", type: "string", required: true },
      { name: "priority", type: "string", required: true }, // "high", "medium", "low"
      { name: "content", type: "string", required: true },
      { name: "requester", type: "string", required: true },
    ],

    outputs: [
      { name: "processed", type: "boolean" },
      { name: "approved", type: "boolean" },
      { name: "processingTime", type: "number" },
      { name: "reviewer", type: "string" },
    ],

    strategy: {
      op: "seq",
      strategies: [
        // Step 1: Initial document validation
        {
          op: "activity",
          activity_ref: "validate_document",
          input_mapping: {
            document_id: "$.inputs.documentId",
            document_type: "$.inputs.documentType",
            content: "$.inputs.content",
          },
        },

        // Step 2: Priority-based routing
        {
          op: "decision",
          conditions: [
            {
              condition: "is_high_priority",
              branch: {
                op: "seq",
                strategies: [
                  // High priority: Parallel processing
                  {
                    op: "parallel",
                    completion_condition: "any", // First to complete wins
                    branches: [
                      {
                        op: "activity",
                        activity_ref: "auto_approve_high_priority",
                        input_mapping: {
                          document_id: "$.inputs.documentId",
                          requester: "$.inputs.requester",
                        },
                      },
                      {
                        op: "seq",
                        strategies: [
                          {
                            op: "activity",
                            activity_ref: "assign_reviewer",
                            input_mapping: {
                              document_type: "$.inputs.documentType",
                              priority: "high",
                            },
                          },
                          {
                            op: "wait",
                            condition: {
                              type: "event",
                              event_type: "review_completed",
                              filter: { document_id: "$.inputs.documentId" },
                            },
                            timeout: "PT1H",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            },
            {
              condition: "is_medium_priority",
              branch: {
                op: "seq",
                strategies: [
                  {
                    op: "activity",
                    activity_ref: "assign_reviewer",
                    input_mapping: {
                      document_type: "$.inputs.documentType",
                      priority: "medium",
                    },
                  },
                  {
                    op: "wait",
                    condition: {
                      type: "event",
                      event_type: "review_completed",
                      filter: { document_id: "$.inputs.documentId" },
                    },
                    timeout: "PT4H",
                  },
                ],
              },
            },
          ],
          default_branch: {
            // Low priority: Sequential processing with longer timeout
            op: "seq",
            strategies: [
              {
                op: "activity",
                activity_ref: "queue_for_review",
                input_mapping: {
                  document_id: "$.inputs.documentId",
                  priority: "low",
                },
              },
              {
                op: "wait",
                condition: {
                  type: "event",
                  event_type: "review_assigned",
                  filter: { document_id: "$.inputs.documentId" },
                },
                timeout: "PT24H",
              },
              {
                op: "wait",
                condition: {
                  type: "event",
                  event_type: "review_completed",
                  filter: { document_id: "$.inputs.documentId" },
                },
                timeout: "PT48H",
              },
            ],
          },
        },

        // Step 3: Final processing
        {
          op: "activity",
          activity_ref: "finalize_document",
          input_mapping: {
            document_id: "$.inputs.documentId",
            approved: "true", // From previous step result
          },
        },

        // Step 4: Notification
        {
          op: "parallel",
          completion_condition: "all",
          branches: [
            {
              op: "activity",
              activity_ref: "notify_requester",
              input_mapping: {
                requester: "$.inputs.requester",
                document_id: "$.inputs.documentId",
                status: "completed",
              },
            },
            {
              op: "activity",
              activity_ref: "update_audit_log",
              input_mapping: {
                document_id: "$.inputs.documentId",
                action: "document_processed",
                timestamp: "now",
              },
            },
          ],
        },
      ],
    },

    timeout: "PT72H",  // 3 days for document processing
    retry_policy: {
      initial_interval: "PT5M",
      backoff_coefficient: 1.5,
      maximum_interval: "PT1H",
      maximum_attempts: 3,
    },

    metadata: {
      author: "Itonami Workflow Engine",
      tags: ["document_processing", "approval_workflow", "conditional_logic"],
      business_domain: "content_management",
      sla_hours: 24,
    },
  },
}
